// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractZRServiceManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// IPaymentCoordinatorRangePayment is an auto generated low-level Go binding around an user-defined struct.
type IPaymentCoordinatorRangePayment struct {
	StrategiesAndMultipliers []IPaymentCoordinatorStrategyAndMultiplier
	Token                    common.Address
	Amount                   *big.Int
	StartTimestamp           uint32
	Duration                 uint32
}

// IPaymentCoordinatorStrategyAndMultiplier is an auto generated low-level Go binding around an user-defined struct.
type IPaymentCoordinatorStrategyAndMultiplier struct {
	Strategy   common.Address
	Multiplier *big.Int
}

// ISignatureUtilsSignatureWithSaltAndExpiry is an auto generated low-level Go binding around an user-defined struct.
type ISignatureUtilsSignatureWithSaltAndExpiry struct {
	Signature []byte
	Salt      [32]byte
	Expiry    *big.Int
}

// ContractZRServiceManagerMetaData contains all meta data concerning the ContractZRServiceManager contract.
var ContractZRServiceManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_avsDirectory\",\"type\":\"address\",\"internalType\":\"contractIAVSDirectory\"},{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_stakeRegistry\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"},{\"name\":\"_zrTaskManager\",\"type\":\"address\",\"internalType\":\"contractZRTaskManagerI\"},{\"name\":\"_undelegationPeriod\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_quorumNumber\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"UNDELEGATION_PERIOD\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"annulUndelegation\",\"inputs\":[{\"name\":\"validatorAddress\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"avsDirectory\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"delegate\",\"inputs\":[{\"name\":\"validatorAddress\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"delegations\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"pendingBalance\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"pendingBalanceActivationHeight\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"deregisterOperatorFromAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getAllOperators\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getCurrentBalance\",\"inputs\":[{\"name\":\"validatorHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getDelegationsForOperator\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getEigenStake\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"quorumNumber\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint96\",\"internalType\":\"uint96\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getOperatorRestakedStrategies\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRestakeableStrategies\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getValidatorAddress\",\"inputs\":[{\"name\":\"validatorHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"payForRange\",\"inputs\":[{\"name\":\"rangePayments\",\"type\":\"tuple[]\",\"internalType\":\"structIPaymentCoordinator.RangePayment[]\",\"components\":[{\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\",\"internalType\":\"structIPaymentCoordinator.StrategyAndMultiplier[]\",\"components\":[{\"name\":\"strategy\",\"type\":\"address\",\"internalType\":\"contractIStrategy\"},{\"name\":\"multiplier\",\"type\":\"uint96\",\"internalType\":\"uint96\"}]},{\"name\":\"token\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"amount\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"startTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"duration\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registerOperatorToAVS\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"operatorSignature\",\"type\":\"tuple\",\"internalType\":\"structISignatureUtils.SignatureWithSaltAndExpiry\",\"components\":[{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"undelegate\",\"inputs\":[{\"name\":\"validatorAddress\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAVSMetadataURI\",\"inputs\":[{\"name\":\"_metadataURI\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"validatorAddresses\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"zrTaskManager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractZRTaskManagerI\"}],\"stateMutability\":\"view\"},{\"type\":\"event\",\"name\":\"Delegated\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"validatorHash\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OperatorRemoved\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"validatorHash\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"UndelegationAnnulled\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"validatorHash\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"UndelegationInitiated\",\"inputs\":[{\"name\":\"operator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"validatorHash\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"undelegationBlock\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false}]",
	Bin: "0x6101606040523480156200001257600080fd5b5060405162002f3738038062002f3783398101604081905262000035916200016c565b6001600160a01b03808716608052600060a081905281871660c05290851660e052869086866200006462000091565b5050600160975550506001600160a01b03909216610100526101405260ff166101205250620001f9915050565b600054610100900460ff1615620000fe5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000151576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200016957600080fd5b50565b60008060008060008060c087890312156200018657600080fd5b8651620001938162000153565b6020880151909650620001a68162000153565b6040880151909550620001b98162000153565b6060880151909450620001cc8162000153565b608088015160a0890151919450925060ff81168114620001eb57600080fd5b809150509295509295509295565b60805160a05160c05160e051610100516101205161014051612c57620002e06000396000818161023d015261125a0152600081816105ab015281816111a50152611e4a015260006101bd015260008181610c4f01528181610dab01528181610e420152818161161f01528181611841015281816119c50152611a64015260008181610a7a01528181610b0901528181610b89015281816112e301528181611379015281816116490152818161177f0152611920015260008181610870015261094e01526000818161020c01528181611337015281816113d501526114540152612c576000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639926ee7d116100b8578063d911c6321161007c578063d911c63214610340578063da4dc49c14610348578063e3412c1214610373578063e481af9d14610386578063f2fde38b1461038e578063f97e8c07146103a157600080fd5b80639926ee7d14610291578063a364f4da146102a4578063a98fb355146102b7578063b2c81eed146102ca578063c9026944146102eb57600080fd5b806358f0e30b1161010a57806358f0e30b146101f75780636b3aa72e1461020a578063715018a6146102305780637533f901146102385780638da5cb5b1461026d5780638dfc88971461027e57600080fd5b806303f24de1146101475780631b4455161461015c57806320163ebb1461016f57806333cfb7b71461019857806334943ba2146101b8575b600080fd5b61015a6101553660046123dc565b6103b4565b005b61015a61016a366004612421565b610733565b61018261017d366004612496565b6109bb565b60405161018f919061250b565b60405180910390f35b6101ab6101a6366004612533565b610a55565b60405161018f9190612557565b6101df7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161018f565b610182610205366004612496565b610f25565b7f00000000000000000000000000000000000000000000000000000000000000006101df565b61015a610fc7565b61025f7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161018f565b6033546001600160a01b03166101df565b61015a61028c3660046123dc565b610fdb565b61015a61029f3660046125a4565b6112d8565b61015a6102b2366004612533565b61136e565b61015a6102c536600461264f565b611435565b6102dd6102d8366004612533565b611489565b60405161018f92919061268c565b6103256102f93660046126ae565b609860209081526000928352604080842090915290825290208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161018f565b6101ab61159b565b61035b6103563660046126ed565b6115fd565b6040516001600160601b03909116815260200161018f565b61025f6103813660046126ae565b611728565b6101ab611779565b61015a61039c366004612533565b611b43565b61015a6103af3660046123dc565b611bbc565b600260975414156103e05760405162461bcd60e51b81526004016103d79061271b565b60405180910390fd5b60026097556040516103f6908390602001612752565b60408051601f198184030181529181528151602092830120600081815260988452828120338083529452919091206002810154919291431080159061044057508054600182015414155b1561046257600181015480825560006002830155610462576104628284611f4b565b600084116104825760405162461bcd60e51b81526004016103d79061276e565b6000856040516020016104959190612752565b604051602081830303815290604052805190602001209050609a600082815260200190815260200160002080546104cb906127a3565b151590506104f4576000818152609a6020908152604090912087516104f29289019061224b565b505b336000908152609960205260409020541561057a5733600090815260996020526040902054811461057a5760405162461bcd60e51b815260206004820152602a60248201527f416c72656164792064656c65676174656420746f206120646966666572656e74604482015269103b30b634b230ba37b960b11b60648201526084016103d7565b6000818152609860209081526040808320338452909152812080549091906105a39088906127f4565b90506105cf337f00000000000000000000000000000000000000000000000000000000000000006115fd565b6001600160601b031681111561063f5760405162461bcd60e51b815260206004820152602f60248201527f546f74616c2064656c65676174696f6e2063616e6e6f7420657863656564204560448201526e6967656e4c61796572207374616b6560881b60648201526084016103d7565b336000908152609960209081526040808320869055609c90915290205460ff166106cc57609d8054336000818152609b6020908152604080832085905560018086019096557fd26e832454299e9fabb89e0e5fffdc046d4e14431bc1bf607ffb2e8a1ddecf7b90940180546001600160a01b031916909317909255609c90915220805460ff191690911790555b8082556002820154156106e85781546001830155600060028301555b604080518481526020810189905233917fb3aafe2a0b0718bd63b8620646cb81d5e8bd91c824947f2c60005f1b398b9cd191015b60405180910390a250506001609755505050505050565b61073b6120b1565b60005b81811015610936578282828181106107585761075861280c565b905060200281019061076a9190612822565b61077b906040810190602001612533565b6001600160a01b03166323b872dd333086868681811061079d5761079d61280c565b90506020028101906107af9190612822565b604080516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152013560448201526064016020604051808303816000875af1158015610806573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082a9190612848565b5082828281811061083d5761083d61280c565b905060200281019061084f9190612822565b610860906040810190602001612533565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008585858181106108a1576108a161280c565b90506020028101906108b39190612822565b604080516001600160e01b031960e086901b1681526001600160a01b039093166004840152013560248201526044016020604051808303816000875af1158015610901573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109259190612848565b5061092f8161286a565b905061073e565b50604051630da22a8b60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631b445516906109859085908590600401612914565b600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b505050505050565b609a60205260009081526040902080546109d4906127a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a00906127a3565b8015610a4d5780601f10610a2257610100808354040283529160200191610a4d565b820191906000526020600020905b815481529060010190602001808311610a3057829003601f168201915b505050505081565b6040516309aa152760e11b81526001600160a01b0382811660048301526060916000917f000000000000000000000000000000000000000000000000000000000000000016906313542a4e90602401602060405180830381865afa158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190612a22565b60405163871ef04960e01b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063871ef04990602401602060405180830381865afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190612a3b565b90506001600160c01b0381161580610c0e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c099190612a64565b60ff16155b15610c2a57505060408051600081526020810190915292915050565b6000610c3e826001600160c01b031661210b565b90506000805b8251811015610d14577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633ca5a5f5848381518110610c8e57610c8e61280c565b01602001516040516001600160e01b031960e084901b16815260f89190911c6004820152602401602060405180830381865afa158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf69190612a22565b610d0090836127f4565b915080610d0c8161286a565b915050610c44565b5060008167ffffffffffffffff811115610d3057610d306122e4565b604051908082528060200260200182016040528015610d59578160200160208202803683370190505b5090506000805b8451811015610f18576000858281518110610d7d57610d7d61280c565b0160200151604051633ca5a5f560e01b815260f89190911c6004820181905291506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ca5a5f590602401602060405180830381865afa158015610df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e169190612a22565b905060005b81811015610f02576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190612a81565b60000151868681518110610eca57610eca61280c565b6001600160a01b039092166020928302919091019091015284610eec8161286a565b9550508080610efa9061286a565b915050610e1b565b5050508080610f109061286a565b915050610d60565b5090979650505050505050565b6000818152609a60205260409020805460609190610f42906127a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6e906127a3565b8015610fbb5780601f10610f9057610100808354040283529160200191610fbb565b820191906000526020600020905b815481529060010190602001808311610f9e57829003601f168201915b50505050509050919050565b610fcf6120b1565b610fd960006121ce565b565b60026097541415610ffe5760405162461bcd60e51b81526004016103d79061271b565b6002609755604051611014908390602001612752565b60408051601f198184030181529181528151602092830120600081815260988452828120338083529452919091206002810154919291431080159061105e57508054600182015414155b1561108057600181015480825560006002830155611080576110808284611f4b565b600084116110a05760405162461bcd60e51b81526004016103d79061276e565b6000856040516020016110b39190612752565b60408051601f1981840301815291815281516020928301203360009081526099909352912054909150811461112a5760405162461bcd60e51b815260206004820152601f60248201527f4e6f742064656c65676174656420746f20746869732076616c696461746f720060448201526064016103d7565b60008181526098602090815260408083203384529091529020805486111561119f5760405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e742062616c616e636520746f20756e64656c656761604482015261746560f01b60648201526084016103d7565b6111c9337f00000000000000000000000000000000000000000000000000000000000000006115fd565b6001600160601b03168682600001546111e29190612ac2565b11156112435760405162461bcd60e51b815260206004820152602a60248201527f556e64656c65676174696f6e20776f756c642065786365656420456967656e4c60448201526961796572207374616b6560b01b60648201526084016103d7565b8054611250908790612ac2565b600182015561127f7f0000000000000000000000000000000000000000000000000000000000000000436127f4565b6002820181905560408051848152602081018990529081019190915233907f775b88cbd39cf51dfe91702ef169ea2352cfb859b1519ec3feb3b6b5b363a8c89060600160405180910390a2505060016097555050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113205760405162461bcd60e51b81526004016103d790612ad9565b604051639926ee7d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639926ee7d906109859085908590600401612b51565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113b65760405162461bcd60e51b81526004016103d790612ad9565b6040516351b27a6d60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a364f4da906024015b600060405180830381600087803b15801561141a57600080fd5b505af115801561142e573d6000803e3d6000fd5b5050505050565b61143d6120b1565b60405163a98fb35560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a98fb3559061140090849060040161250b565b6001600160a01b03811660009081526099602052604081205460609190806114ec5760405162461bcd60e51b815260206004820152601660248201527513dc195c985d1bdc881b9bdd0819195b1959d85d195960521b60448201526064016103d7565b6000818152609a602052604081208054611505906127a3565b80601f0160208091040260200160405190810160405280929190818152602001828054611531906127a3565b801561157e5780601f106115535761010080835404028352916020019161157e565b820191906000526020600020905b81548152906001019060200180831161156157829003601f168201915b50505050509050806115908387611728565b935093505050915091565b6060609d8054806020026020016040519081016040528092919081815260200182805480156115f357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115d5575b5050505050905090565b604051631619718360e21b81526001600160a01b0383811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000821691635401ed27917f000000000000000000000000000000000000000000000000000000000000000090911690635865c60c906024016040805180830381865afa158015611691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b59190612b9c565b5160405160e083901b6001600160e01b0319168152600481019190915260ff85166024820152604401602060405180830381865afa1580156116fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171f9190612bcc565b90505b92915050565b60008281526098602090815260408083206001600160a01b03851684529091528120600281015443108015906117615750600281015415155b1561177157600101549050611722565b549392505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ff9190612a64565b60ff1690508061181d57505060408051600081526020810190915290565b6000805b828110156118d257604051633ca5a5f560e01b815260ff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015611890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b49190612a22565b6118be90836127f4565b9150806118ca8161286a565b915050611821565b5060008167ffffffffffffffff8111156118ee576118ee6122e4565b604051908082528060200260200182016040528015611917578160200160208202803683370190505b5090506000805b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639aa1653d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561197c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a09190612a64565b60ff16811015611b3957604051633ca5a5f560e01b815260ff821660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633ca5a5f590602401602060405180830381865afa158015611a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a389190612a22565b905060005b81811015611b24576040516356e4026d60e11b815260ff84166004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063adc804da906044016040805180830381865afa158015611ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad69190612a81565b60000151858581518110611aec57611aec61280c565b6001600160a01b039092166020928302919091019091015283611b0e8161286a565b9450508080611b1c9061286a565b915050611a3d565b50508080611b319061286a565b91505061191e565b5090949350505050565b611b4b6120b1565b6001600160a01b038116611bb05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d7565b611bb9816121ce565b50565b60026097541415611bdf5760405162461bcd60e51b81526004016103d79061271b565b6002609755604051611bf5908390602001612752565b60408051601f1981840301815291815281516020928301206000818152609884528281203380835294529190912060028101549192914310801590611c3f57508054600182015414155b15611c6157600181015480825560006002830155611c6157611c618284611f4b565b60008411611c815760405162461bcd60e51b81526004016103d79061276e565b600085604051602001611c949190612752565b60408051601f19818403018152918152815160209283012033600090815260999093529120549091508114611d0b5760405162461bcd60e51b815260206004820152601f60248201527f4e6f742064656c65676174656420746f20746869732076616c696461746f720060448201526064016103d7565b6000818152609860209081526040808320338452909152902060028101544310611d775760405162461bcd60e51b815260206004820152601f60248201527f4e6f2076616c696420756e64656c65676174696f6e20746f2063616e63656c0060448201526064016103d7565b8054600182015410611dcb5760405162461bcd60e51b815260206004820181905260248201527f4e6f2070656e64696e6720756e64656c65676174696f6e20746f20616e6e756c60448201526064016103d7565b60018101548154600091611dde91612ac2565b905080871115611e445760405162461bcd60e51b815260206004820152602b60248201527f43616e6e6f7420616e6e756c206d6f7265207468616e2070656e64696e67207560448201526a373232b632b3b0ba34b7b760a91b60648201526084016103d7565b611e6e337f00000000000000000000000000000000000000000000000000000000000000006115fd565b6001600160601b0316878360010154611e8791906127f4565b1115611ee55760405162461bcd60e51b815260206004820152602760248201527f416e6e756c6d656e7420776f756c642065786365656420456967656e4c61796560448201526672207374616b6560c81b60648201526084016103d7565b86826001016000828254611ef991906127f4565b9091555050815460018301541415611f1357600060028301555b604080518481526020810189905233917faed743468d488118a0e1173d01ac45db9dcf8337dff89b037b6264f39d6e5de7910161071c565b6001600160a01b0382166000908152609b6020526040812054609d8054919291611f7790600190612ac2565b81548110611f8757611f8761280c565b600091825260209091200154609d80546001600160a01b039092169250829184908110611fb657611fb661280c565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559183168152609b90915260409020829055609d80548061200057612000612be9565b60008281526020808220600019908401810180546001600160a01b03191690559092019092556001600160a01b038616808352609b82526040808420849055609c8352808420805460ff1916905560998352808420849055868452609883528084208285528352808420848155600181018590556002019390935591518581527fd7fc6178490520705355c7c3941d247da7890efa312e3366fe195e176c0e9e80910160405180910390a250505050565b6033546001600160a01b03163314610fd95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d7565b606060008061211984612220565b61ffff1667ffffffffffffffff811115612135576121356122e4565b6040519080825280601f01601f19166020018201604052801561215f576020820181803683370190505b5090506000805b825182108015612177575061010081105b15611b39576001811b9350858416156121be578060f81b8383815181106121a0576121a061280c565b60200101906001600160f81b031916908160001a9053508160010191505b6121c78161286a565b9050612166565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000805b821561172257612235600184612ac2565b909216918061224381612bff565b915050612224565b828054612257906127a3565b90600052602060002090601f01602090048101928261227957600085556122bf565b82601f1061229257805160ff19168380011785556122bf565b828001600101855582156122bf579182015b828111156122bf5782518255916020019190600101906122a4565b506122cb9291506122cf565b5090565b5b808211156122cb57600081556001016122d0565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561231d5761231d6122e4565b60405290565b6040805190810167ffffffffffffffff8111828210171561231d5761231d6122e4565b600067ffffffffffffffff80841115612361576123616122e4565b604051601f8501601f19908116603f01168101908282118183101715612389576123896122e4565b816040528093508581528686860111156123a257600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126123cd57600080fd5b61171f83833560208501612346565b600080604083850312156123ef57600080fd5b823567ffffffffffffffff81111561240657600080fd5b612412858286016123bc565b95602094909401359450505050565b6000806020838503121561243457600080fd5b823567ffffffffffffffff8082111561244c57600080fd5b818501915085601f83011261246057600080fd5b81358181111561246f57600080fd5b8660208260051b850101111561248457600080fd5b60209290920196919550909350505050565b6000602082840312156124a857600080fd5b5035919050565b60005b838110156124ca5781810151838201526020016124b2565b838111156124d9576000848401525b50505050565b600081518084526124f78160208601602086016124af565b601f01601f19169290920160200192915050565b60208152600061171f60208301846124df565b6001600160a01b0381168114611bb957600080fd5b60006020828403121561254557600080fd5b81356125508161251e565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156125985783516001600160a01b031683529284019291840191600101612573565b50909695505050505050565b600080604083850312156125b757600080fd5b82356125c28161251e565b9150602083013567ffffffffffffffff808211156125df57600080fd5b90840190606082870312156125f357600080fd5b6125fb6122fa565b82358281111561260a57600080fd5b83019150601f8201871361261d57600080fd5b61262c87833560208501612346565b815260208301356020820152604083013560408201528093505050509250929050565b60006020828403121561266157600080fd5b813567ffffffffffffffff81111561267857600080fd5b612684848285016123bc565b949350505050565b60408152600061269f60408301856124df565b90508260208301529392505050565b600080604083850312156126c157600080fd5b8235915060208301356126d38161251e565b809150509250929050565b60ff81168114611bb957600080fd5b6000806040838503121561270057600080fd5b823561270b8161251e565b915060208301356126d3816126de565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600082516127648184602087016124af565b9190910192915050565b6020808252818101527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604082015260600190565b600181811c908216806127b757607f821691505b602082108114156127d857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612807576128076127de565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e1983360301811261276457600080fd5b80356128438161251e565b919050565b60006020828403121561285a57600080fd5b8151801515811461255057600080fd5b600060001982141561287e5761287e6127de565b5060010190565b6001600160601b0381168114611bb957600080fd5b8183526000602080850194508260005b858110156128f55781356128bd8161251e565b6001600160a01b03168752818301356128d581612885565b6001600160601b03168784015260409687019691909101906001016128aa565b509495945050505050565b803563ffffffff8116811461284357600080fd5b60208082528181018390526000906040808401600586901b8501820187855b88811015612a1457878303603f190184528135368b9003609e1901811261295957600080fd5b8a0160a0813536839003601e1901811261297257600080fd5b8201803567ffffffffffffffff81111561298b57600080fd5b8060061b360384131561299d57600080fd5b8287526129af838801828c850161289a565b925050506129be888301612838565b6001600160a01b031688860152818701358786015260606129e0818401612900565b63ffffffff169086015260806129f7838201612900565b63ffffffff16950194909452509285019290850190600101612933565b509098975050505050505050565b600060208284031215612a3457600080fd5b5051919050565b600060208284031215612a4d57600080fd5b81516001600160c01b038116811461255057600080fd5b600060208284031215612a7657600080fd5b8151612550816126de565b600060408284031215612a9357600080fd5b612a9b612323565b8251612aa68161251e565b81526020830151612ab681612885565b60208201529392505050565b600082821015612ad457612ad46127de565b500390565b60208082526052908201527f536572766963654d616e61676572426173652e6f6e6c7952656769737472794360408201527f6f6f7264696e61746f723a2063616c6c6572206973206e6f742074686520726560608201527133b4b9ba393c9031b7b7b93234b730ba37b960711b608082015260a00190565b60018060a01b0383168152604060208201526000825160606040840152612b7b60a08401826124df565b90506020840151606084015260408401516080840152809150509392505050565b600060408284031215612bae57600080fd5b612bb6612323565b82518152602083015160038110612ab657600080fd5b600060208284031215612bde57600080fd5b815161255081612885565b634e487b7160e01b600052603160045260246000fd5b600061ffff80831681811415612c1757612c176127de565b600101939250505056fea2646970667358221220dc072c43f4b03258c3a3fad1eb99dae02cf741f148d4e74414553eba70db488564736f6c634300080c0033",
}

// ContractZRServiceManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractZRServiceManagerMetaData.ABI instead.
var ContractZRServiceManagerABI = ContractZRServiceManagerMetaData.ABI

// ContractZRServiceManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractZRServiceManagerMetaData.Bin instead.
var ContractZRServiceManagerBin = ContractZRServiceManagerMetaData.Bin

// DeployContractZRServiceManager deploys a new Ethereum contract, binding an instance of ContractZRServiceManager to it.
func DeployContractZRServiceManager(auth *bind.TransactOpts, backend bind.ContractBackend, _avsDirectory common.Address, _registryCoordinator common.Address, _stakeRegistry common.Address, _zrTaskManager common.Address, _undelegationPeriod *big.Int, _quorumNumber uint8) (common.Address, *types.Transaction, *ContractZRServiceManager, error) {
	parsed, err := ContractZRServiceManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractZRServiceManagerBin), backend, _avsDirectory, _registryCoordinator, _stakeRegistry, _zrTaskManager, _undelegationPeriod, _quorumNumber)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractZRServiceManager{ContractZRServiceManagerCaller: ContractZRServiceManagerCaller{contract: contract}, ContractZRServiceManagerTransactor: ContractZRServiceManagerTransactor{contract: contract}, ContractZRServiceManagerFilterer: ContractZRServiceManagerFilterer{contract: contract}}, nil
}

// ContractZRServiceManager is an auto generated Go binding around an Ethereum contract.
type ContractZRServiceManager struct {
	ContractZRServiceManagerCaller     // Read-only binding to the contract
	ContractZRServiceManagerTransactor // Write-only binding to the contract
	ContractZRServiceManagerFilterer   // Log filterer for contract events
}

// ContractZRServiceManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractZRServiceManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractZRServiceManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractZRServiceManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractZRServiceManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractZRServiceManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractZRServiceManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractZRServiceManagerSession struct {
	Contract     *ContractZRServiceManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts             // Call options to use throughout this session
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// ContractZRServiceManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractZRServiceManagerCallerSession struct {
	Contract *ContractZRServiceManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                   // Call options to use throughout this session
}

// ContractZRServiceManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractZRServiceManagerTransactorSession struct {
	Contract     *ContractZRServiceManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                   // Transaction auth options to use throughout this session
}

// ContractZRServiceManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractZRServiceManagerRaw struct {
	Contract *ContractZRServiceManager // Generic contract binding to access the raw methods on
}

// ContractZRServiceManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractZRServiceManagerCallerRaw struct {
	Contract *ContractZRServiceManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractZRServiceManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractZRServiceManagerTransactorRaw struct {
	Contract *ContractZRServiceManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractZRServiceManager creates a new instance of ContractZRServiceManager, bound to a specific deployed contract.
func NewContractZRServiceManager(address common.Address, backend bind.ContractBackend) (*ContractZRServiceManager, error) {
	contract, err := bindContractZRServiceManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManager{ContractZRServiceManagerCaller: ContractZRServiceManagerCaller{contract: contract}, ContractZRServiceManagerTransactor: ContractZRServiceManagerTransactor{contract: contract}, ContractZRServiceManagerFilterer: ContractZRServiceManagerFilterer{contract: contract}}, nil
}

// NewContractZRServiceManagerCaller creates a new read-only instance of ContractZRServiceManager, bound to a specific deployed contract.
func NewContractZRServiceManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractZRServiceManagerCaller, error) {
	contract, err := bindContractZRServiceManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerCaller{contract: contract}, nil
}

// NewContractZRServiceManagerTransactor creates a new write-only instance of ContractZRServiceManager, bound to a specific deployed contract.
func NewContractZRServiceManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractZRServiceManagerTransactor, error) {
	contract, err := bindContractZRServiceManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerTransactor{contract: contract}, nil
}

// NewContractZRServiceManagerFilterer creates a new log filterer instance of ContractZRServiceManager, bound to a specific deployed contract.
func NewContractZRServiceManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractZRServiceManagerFilterer, error) {
	contract, err := bindContractZRServiceManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerFilterer{contract: contract}, nil
}

// bindContractZRServiceManager binds a generic wrapper to an already deployed contract.
func bindContractZRServiceManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractZRServiceManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractZRServiceManager *ContractZRServiceManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractZRServiceManager.Contract.ContractZRServiceManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractZRServiceManager *ContractZRServiceManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.ContractZRServiceManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractZRServiceManager *ContractZRServiceManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.ContractZRServiceManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractZRServiceManager *ContractZRServiceManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractZRServiceManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.contract.Transact(opts, method, params...)
}

// UNDELEGATIONPERIOD is a free data retrieval call binding the contract method 0x7533f901.
//
// Solidity: function UNDELEGATION_PERIOD() view returns(uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) UNDELEGATIONPERIOD(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "UNDELEGATION_PERIOD")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// UNDELEGATIONPERIOD is a free data retrieval call binding the contract method 0x7533f901.
//
// Solidity: function UNDELEGATION_PERIOD() view returns(uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) UNDELEGATIONPERIOD() (*big.Int, error) {
	return _ContractZRServiceManager.Contract.UNDELEGATIONPERIOD(&_ContractZRServiceManager.CallOpts)
}

// UNDELEGATIONPERIOD is a free data retrieval call binding the contract method 0x7533f901.
//
// Solidity: function UNDELEGATION_PERIOD() view returns(uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) UNDELEGATIONPERIOD() (*big.Int, error) {
	return _ContractZRServiceManager.Contract.UNDELEGATIONPERIOD(&_ContractZRServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) AvsDirectory(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "avsDirectory")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) AvsDirectory() (common.Address, error) {
	return _ContractZRServiceManager.Contract.AvsDirectory(&_ContractZRServiceManager.CallOpts)
}

// AvsDirectory is a free data retrieval call binding the contract method 0x6b3aa72e.
//
// Solidity: function avsDirectory() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) AvsDirectory() (common.Address, error) {
	return _ContractZRServiceManager.Contract.AvsDirectory(&_ContractZRServiceManager.CallOpts)
}

// Delegations is a free data retrieval call binding the contract method 0xc9026944.
//
// Solidity: function delegations(bytes32 , address ) view returns(uint256 balance, uint256 pendingBalance, uint256 pendingBalanceActivationHeight)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) Delegations(opts *bind.CallOpts, arg0 [32]byte, arg1 common.Address) (struct {
	Balance                        *big.Int
	PendingBalance                 *big.Int
	PendingBalanceActivationHeight *big.Int
}, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "delegations", arg0, arg1)

	outstruct := new(struct {
		Balance                        *big.Int
		PendingBalance                 *big.Int
		PendingBalanceActivationHeight *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Balance = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.PendingBalance = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.PendingBalanceActivationHeight = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Delegations is a free data retrieval call binding the contract method 0xc9026944.
//
// Solidity: function delegations(bytes32 , address ) view returns(uint256 balance, uint256 pendingBalance, uint256 pendingBalanceActivationHeight)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) Delegations(arg0 [32]byte, arg1 common.Address) (struct {
	Balance                        *big.Int
	PendingBalance                 *big.Int
	PendingBalanceActivationHeight *big.Int
}, error) {
	return _ContractZRServiceManager.Contract.Delegations(&_ContractZRServiceManager.CallOpts, arg0, arg1)
}

// Delegations is a free data retrieval call binding the contract method 0xc9026944.
//
// Solidity: function delegations(bytes32 , address ) view returns(uint256 balance, uint256 pendingBalance, uint256 pendingBalanceActivationHeight)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) Delegations(arg0 [32]byte, arg1 common.Address) (struct {
	Balance                        *big.Int
	PendingBalance                 *big.Int
	PendingBalanceActivationHeight *big.Int
}, error) {
	return _ContractZRServiceManager.Contract.Delegations(&_ContractZRServiceManager.CallOpts, arg0, arg1)
}

// GetAllOperators is a free data retrieval call binding the contract method 0xd911c632.
//
// Solidity: function getAllOperators() view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) GetAllOperators(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "getAllOperators")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetAllOperators is a free data retrieval call binding the contract method 0xd911c632.
//
// Solidity: function getAllOperators() view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerSession) GetAllOperators() ([]common.Address, error) {
	return _ContractZRServiceManager.Contract.GetAllOperators(&_ContractZRServiceManager.CallOpts)
}

// GetAllOperators is a free data retrieval call binding the contract method 0xd911c632.
//
// Solidity: function getAllOperators() view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) GetAllOperators() ([]common.Address, error) {
	return _ContractZRServiceManager.Contract.GetAllOperators(&_ContractZRServiceManager.CallOpts)
}

// GetCurrentBalance is a free data retrieval call binding the contract method 0xe3412c12.
//
// Solidity: function getCurrentBalance(bytes32 validatorHash, address operator) view returns(uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) GetCurrentBalance(opts *bind.CallOpts, validatorHash [32]byte, operator common.Address) (*big.Int, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "getCurrentBalance", validatorHash, operator)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetCurrentBalance is a free data retrieval call binding the contract method 0xe3412c12.
//
// Solidity: function getCurrentBalance(bytes32 validatorHash, address operator) view returns(uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) GetCurrentBalance(validatorHash [32]byte, operator common.Address) (*big.Int, error) {
	return _ContractZRServiceManager.Contract.GetCurrentBalance(&_ContractZRServiceManager.CallOpts, validatorHash, operator)
}

// GetCurrentBalance is a free data retrieval call binding the contract method 0xe3412c12.
//
// Solidity: function getCurrentBalance(bytes32 validatorHash, address operator) view returns(uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) GetCurrentBalance(validatorHash [32]byte, operator common.Address) (*big.Int, error) {
	return _ContractZRServiceManager.Contract.GetCurrentBalance(&_ContractZRServiceManager.CallOpts, validatorHash, operator)
}

// GetDelegationsForOperator is a free data retrieval call binding the contract method 0xb2c81eed.
//
// Solidity: function getDelegationsForOperator(address operator) view returns(string, uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) GetDelegationsForOperator(opts *bind.CallOpts, operator common.Address) (string, *big.Int, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "getDelegationsForOperator", operator)

	if err != nil {
		return *new(string), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return out0, out1, err

}

// GetDelegationsForOperator is a free data retrieval call binding the contract method 0xb2c81eed.
//
// Solidity: function getDelegationsForOperator(address operator) view returns(string, uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) GetDelegationsForOperator(operator common.Address) (string, *big.Int, error) {
	return _ContractZRServiceManager.Contract.GetDelegationsForOperator(&_ContractZRServiceManager.CallOpts, operator)
}

// GetDelegationsForOperator is a free data retrieval call binding the contract method 0xb2c81eed.
//
// Solidity: function getDelegationsForOperator(address operator) view returns(string, uint256)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) GetDelegationsForOperator(operator common.Address) (string, *big.Int, error) {
	return _ContractZRServiceManager.Contract.GetDelegationsForOperator(&_ContractZRServiceManager.CallOpts, operator)
}

// GetEigenStake is a free data retrieval call binding the contract method 0xda4dc49c.
//
// Solidity: function getEigenStake(address operator, uint8 quorumNumber) view returns(uint96)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) GetEigenStake(opts *bind.CallOpts, operator common.Address, quorumNumber uint8) (*big.Int, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "getEigenStake", operator, quorumNumber)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetEigenStake is a free data retrieval call binding the contract method 0xda4dc49c.
//
// Solidity: function getEigenStake(address operator, uint8 quorumNumber) view returns(uint96)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) GetEigenStake(operator common.Address, quorumNumber uint8) (*big.Int, error) {
	return _ContractZRServiceManager.Contract.GetEigenStake(&_ContractZRServiceManager.CallOpts, operator, quorumNumber)
}

// GetEigenStake is a free data retrieval call binding the contract method 0xda4dc49c.
//
// Solidity: function getEigenStake(address operator, uint8 quorumNumber) view returns(uint96)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) GetEigenStake(operator common.Address, quorumNumber uint8) (*big.Int, error) {
	return _ContractZRServiceManager.Contract.GetEigenStake(&_ContractZRServiceManager.CallOpts, operator, quorumNumber)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) GetOperatorRestakedStrategies(opts *bind.CallOpts, operator common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "getOperatorRestakedStrategies", operator)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractZRServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractZRServiceManager.CallOpts, operator)
}

// GetOperatorRestakedStrategies is a free data retrieval call binding the contract method 0x33cfb7b7.
//
// Solidity: function getOperatorRestakedStrategies(address operator) view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) GetOperatorRestakedStrategies(operator common.Address) ([]common.Address, error) {
	return _ContractZRServiceManager.Contract.GetOperatorRestakedStrategies(&_ContractZRServiceManager.CallOpts, operator)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) GetRestakeableStrategies(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "getRestakeableStrategies")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractZRServiceManager.Contract.GetRestakeableStrategies(&_ContractZRServiceManager.CallOpts)
}

// GetRestakeableStrategies is a free data retrieval call binding the contract method 0xe481af9d.
//
// Solidity: function getRestakeableStrategies() view returns(address[])
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) GetRestakeableStrategies() ([]common.Address, error) {
	return _ContractZRServiceManager.Contract.GetRestakeableStrategies(&_ContractZRServiceManager.CallOpts)
}

// GetValidatorAddress is a free data retrieval call binding the contract method 0x58f0e30b.
//
// Solidity: function getValidatorAddress(bytes32 validatorHash) view returns(string)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) GetValidatorAddress(opts *bind.CallOpts, validatorHash [32]byte) (string, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "getValidatorAddress", validatorHash)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetValidatorAddress is a free data retrieval call binding the contract method 0x58f0e30b.
//
// Solidity: function getValidatorAddress(bytes32 validatorHash) view returns(string)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) GetValidatorAddress(validatorHash [32]byte) (string, error) {
	return _ContractZRServiceManager.Contract.GetValidatorAddress(&_ContractZRServiceManager.CallOpts, validatorHash)
}

// GetValidatorAddress is a free data retrieval call binding the contract method 0x58f0e30b.
//
// Solidity: function getValidatorAddress(bytes32 validatorHash) view returns(string)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) GetValidatorAddress(validatorHash [32]byte) (string, error) {
	return _ContractZRServiceManager.Contract.GetValidatorAddress(&_ContractZRServiceManager.CallOpts, validatorHash)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) Owner() (common.Address, error) {
	return _ContractZRServiceManager.Contract.Owner(&_ContractZRServiceManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) Owner() (common.Address, error) {
	return _ContractZRServiceManager.Contract.Owner(&_ContractZRServiceManager.CallOpts)
}

// ValidatorAddresses is a free data retrieval call binding the contract method 0x20163ebb.
//
// Solidity: function validatorAddresses(bytes32 ) view returns(string)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) ValidatorAddresses(opts *bind.CallOpts, arg0 [32]byte) (string, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "validatorAddresses", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// ValidatorAddresses is a free data retrieval call binding the contract method 0x20163ebb.
//
// Solidity: function validatorAddresses(bytes32 ) view returns(string)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) ValidatorAddresses(arg0 [32]byte) (string, error) {
	return _ContractZRServiceManager.Contract.ValidatorAddresses(&_ContractZRServiceManager.CallOpts, arg0)
}

// ValidatorAddresses is a free data retrieval call binding the contract method 0x20163ebb.
//
// Solidity: function validatorAddresses(bytes32 ) view returns(string)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) ValidatorAddresses(arg0 [32]byte) (string, error) {
	return _ContractZRServiceManager.Contract.ValidatorAddresses(&_ContractZRServiceManager.CallOpts, arg0)
}

// ZrTaskManager is a free data retrieval call binding the contract method 0x34943ba2.
//
// Solidity: function zrTaskManager() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerCaller) ZrTaskManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractZRServiceManager.contract.Call(opts, &out, "zrTaskManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ZrTaskManager is a free data retrieval call binding the contract method 0x34943ba2.
//
// Solidity: function zrTaskManager() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerSession) ZrTaskManager() (common.Address, error) {
	return _ContractZRServiceManager.Contract.ZrTaskManager(&_ContractZRServiceManager.CallOpts)
}

// ZrTaskManager is a free data retrieval call binding the contract method 0x34943ba2.
//
// Solidity: function zrTaskManager() view returns(address)
func (_ContractZRServiceManager *ContractZRServiceManagerCallerSession) ZrTaskManager() (common.Address, error) {
	return _ContractZRServiceManager.Contract.ZrTaskManager(&_ContractZRServiceManager.CallOpts)
}

// AnnulUndelegation is a paid mutator transaction binding the contract method 0xf97e8c07.
//
// Solidity: function annulUndelegation(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) AnnulUndelegation(opts *bind.TransactOpts, validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "annulUndelegation", validatorAddress, amount)
}

// AnnulUndelegation is a paid mutator transaction binding the contract method 0xf97e8c07.
//
// Solidity: function annulUndelegation(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) AnnulUndelegation(validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.AnnulUndelegation(&_ContractZRServiceManager.TransactOpts, validatorAddress, amount)
}

// AnnulUndelegation is a paid mutator transaction binding the contract method 0xf97e8c07.
//
// Solidity: function annulUndelegation(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) AnnulUndelegation(validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.AnnulUndelegation(&_ContractZRServiceManager.TransactOpts, validatorAddress, amount)
}

// Delegate is a paid mutator transaction binding the contract method 0x03f24de1.
//
// Solidity: function delegate(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) Delegate(opts *bind.TransactOpts, validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "delegate", validatorAddress, amount)
}

// Delegate is a paid mutator transaction binding the contract method 0x03f24de1.
//
// Solidity: function delegate(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) Delegate(validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.Delegate(&_ContractZRServiceManager.TransactOpts, validatorAddress, amount)
}

// Delegate is a paid mutator transaction binding the contract method 0x03f24de1.
//
// Solidity: function delegate(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) Delegate(validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.Delegate(&_ContractZRServiceManager.TransactOpts, validatorAddress, amount)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) DeregisterOperatorFromAVS(opts *bind.TransactOpts, operator common.Address) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "deregisterOperatorFromAVS", operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractZRServiceManager.TransactOpts, operator)
}

// DeregisterOperatorFromAVS is a paid mutator transaction binding the contract method 0xa364f4da.
//
// Solidity: function deregisterOperatorFromAVS(address operator) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) DeregisterOperatorFromAVS(operator common.Address) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.DeregisterOperatorFromAVS(&_ContractZRServiceManager.TransactOpts, operator)
}

// PayForRange is a paid mutator transaction binding the contract method 0x1b445516.
//
// Solidity: function payForRange(((address,uint96)[],address,uint256,uint32,uint32)[] rangePayments) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) PayForRange(opts *bind.TransactOpts, rangePayments []IPaymentCoordinatorRangePayment) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "payForRange", rangePayments)
}

// PayForRange is a paid mutator transaction binding the contract method 0x1b445516.
//
// Solidity: function payForRange(((address,uint96)[],address,uint256,uint32,uint32)[] rangePayments) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) PayForRange(rangePayments []IPaymentCoordinatorRangePayment) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.PayForRange(&_ContractZRServiceManager.TransactOpts, rangePayments)
}

// PayForRange is a paid mutator transaction binding the contract method 0x1b445516.
//
// Solidity: function payForRange(((address,uint96)[],address,uint256,uint32,uint32)[] rangePayments) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) PayForRange(rangePayments []IPaymentCoordinatorRangePayment) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.PayForRange(&_ContractZRServiceManager.TransactOpts, rangePayments)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) RegisterOperatorToAVS(opts *bind.TransactOpts, operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "registerOperatorToAVS", operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.RegisterOperatorToAVS(&_ContractZRServiceManager.TransactOpts, operator, operatorSignature)
}

// RegisterOperatorToAVS is a paid mutator transaction binding the contract method 0x9926ee7d.
//
// Solidity: function registerOperatorToAVS(address operator, (bytes,bytes32,uint256) operatorSignature) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) RegisterOperatorToAVS(operator common.Address, operatorSignature ISignatureUtilsSignatureWithSaltAndExpiry) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.RegisterOperatorToAVS(&_ContractZRServiceManager.TransactOpts, operator, operatorSignature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.RenounceOwnership(&_ContractZRServiceManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.RenounceOwnership(&_ContractZRServiceManager.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.TransferOwnership(&_ContractZRServiceManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.TransferOwnership(&_ContractZRServiceManager.TransactOpts, newOwner)
}

// Undelegate is a paid mutator transaction binding the contract method 0x8dfc8897.
//
// Solidity: function undelegate(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) Undelegate(opts *bind.TransactOpts, validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "undelegate", validatorAddress, amount)
}

// Undelegate is a paid mutator transaction binding the contract method 0x8dfc8897.
//
// Solidity: function undelegate(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) Undelegate(validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.Undelegate(&_ContractZRServiceManager.TransactOpts, validatorAddress, amount)
}

// Undelegate is a paid mutator transaction binding the contract method 0x8dfc8897.
//
// Solidity: function undelegate(string validatorAddress, uint256 amount) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) Undelegate(validatorAddress string, amount *big.Int) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.Undelegate(&_ContractZRServiceManager.TransactOpts, validatorAddress, amount)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactor) UpdateAVSMetadataURI(opts *bind.TransactOpts, _metadataURI string) (*types.Transaction, error) {
	return _ContractZRServiceManager.contract.Transact(opts, "updateAVSMetadataURI", _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.UpdateAVSMetadataURI(&_ContractZRServiceManager.TransactOpts, _metadataURI)
}

// UpdateAVSMetadataURI is a paid mutator transaction binding the contract method 0xa98fb355.
//
// Solidity: function updateAVSMetadataURI(string _metadataURI) returns()
func (_ContractZRServiceManager *ContractZRServiceManagerTransactorSession) UpdateAVSMetadataURI(_metadataURI string) (*types.Transaction, error) {
	return _ContractZRServiceManager.Contract.UpdateAVSMetadataURI(&_ContractZRServiceManager.TransactOpts, _metadataURI)
}

// ContractZRServiceManagerDelegatedIterator is returned from FilterDelegated and is used to iterate over the raw logs and unpacked data for Delegated events raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerDelegatedIterator struct {
	Event *ContractZRServiceManagerDelegated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZRServiceManagerDelegatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZRServiceManagerDelegated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZRServiceManagerDelegated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZRServiceManagerDelegatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZRServiceManagerDelegatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZRServiceManagerDelegated represents a Delegated event raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerDelegated struct {
	Operator      common.Address
	ValidatorHash [32]byte
	Amount        *big.Int
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterDelegated is a free log retrieval operation binding the contract event 0xb3aafe2a0b0718bd63b8620646cb81d5e8bd91c824947f2c60005f1b398b9cd1.
//
// Solidity: event Delegated(address indexed operator, bytes32 validatorHash, uint256 amount)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) FilterDelegated(opts *bind.FilterOpts, operator []common.Address) (*ContractZRServiceManagerDelegatedIterator, error) {

	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.FilterLogs(opts, "Delegated", operatorRule)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerDelegatedIterator{contract: _ContractZRServiceManager.contract, event: "Delegated", logs: logs, sub: sub}, nil
}

// WatchDelegated is a free log subscription operation binding the contract event 0xb3aafe2a0b0718bd63b8620646cb81d5e8bd91c824947f2c60005f1b398b9cd1.
//
// Solidity: event Delegated(address indexed operator, bytes32 validatorHash, uint256 amount)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) WatchDelegated(opts *bind.WatchOpts, sink chan<- *ContractZRServiceManagerDelegated, operator []common.Address) (event.Subscription, error) {

	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.WatchLogs(opts, "Delegated", operatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZRServiceManagerDelegated)
				if err := _ContractZRServiceManager.contract.UnpackLog(event, "Delegated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDelegated is a log parse operation binding the contract event 0xb3aafe2a0b0718bd63b8620646cb81d5e8bd91c824947f2c60005f1b398b9cd1.
//
// Solidity: event Delegated(address indexed operator, bytes32 validatorHash, uint256 amount)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) ParseDelegated(log types.Log) (*ContractZRServiceManagerDelegated, error) {
	event := new(ContractZRServiceManagerDelegated)
	if err := _ContractZRServiceManager.contract.UnpackLog(event, "Delegated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZRServiceManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerInitializedIterator struct {
	Event *ContractZRServiceManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZRServiceManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZRServiceManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZRServiceManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZRServiceManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZRServiceManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZRServiceManagerInitialized represents a Initialized event raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractZRServiceManagerInitializedIterator, error) {

	logs, sub, err := _ContractZRServiceManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerInitializedIterator{contract: _ContractZRServiceManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractZRServiceManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractZRServiceManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZRServiceManagerInitialized)
				if err := _ContractZRServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) ParseInitialized(log types.Log) (*ContractZRServiceManagerInitialized, error) {
	event := new(ContractZRServiceManagerInitialized)
	if err := _ContractZRServiceManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZRServiceManagerOperatorRemovedIterator is returned from FilterOperatorRemoved and is used to iterate over the raw logs and unpacked data for OperatorRemoved events raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerOperatorRemovedIterator struct {
	Event *ContractZRServiceManagerOperatorRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZRServiceManagerOperatorRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZRServiceManagerOperatorRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZRServiceManagerOperatorRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZRServiceManagerOperatorRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZRServiceManagerOperatorRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZRServiceManagerOperatorRemoved represents a OperatorRemoved event raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerOperatorRemoved struct {
	Operator      common.Address
	ValidatorHash [32]byte
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOperatorRemoved is a free log retrieval operation binding the contract event 0xd7fc6178490520705355c7c3941d247da7890efa312e3366fe195e176c0e9e80.
//
// Solidity: event OperatorRemoved(address indexed operator, bytes32 validatorHash)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) FilterOperatorRemoved(opts *bind.FilterOpts, operator []common.Address) (*ContractZRServiceManagerOperatorRemovedIterator, error) {

	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.FilterLogs(opts, "OperatorRemoved", operatorRule)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerOperatorRemovedIterator{contract: _ContractZRServiceManager.contract, event: "OperatorRemoved", logs: logs, sub: sub}, nil
}

// WatchOperatorRemoved is a free log subscription operation binding the contract event 0xd7fc6178490520705355c7c3941d247da7890efa312e3366fe195e176c0e9e80.
//
// Solidity: event OperatorRemoved(address indexed operator, bytes32 validatorHash)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) WatchOperatorRemoved(opts *bind.WatchOpts, sink chan<- *ContractZRServiceManagerOperatorRemoved, operator []common.Address) (event.Subscription, error) {

	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.WatchLogs(opts, "OperatorRemoved", operatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZRServiceManagerOperatorRemoved)
				if err := _ContractZRServiceManager.contract.UnpackLog(event, "OperatorRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOperatorRemoved is a log parse operation binding the contract event 0xd7fc6178490520705355c7c3941d247da7890efa312e3366fe195e176c0e9e80.
//
// Solidity: event OperatorRemoved(address indexed operator, bytes32 validatorHash)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) ParseOperatorRemoved(log types.Log) (*ContractZRServiceManagerOperatorRemoved, error) {
	event := new(ContractZRServiceManagerOperatorRemoved)
	if err := _ContractZRServiceManager.contract.UnpackLog(event, "OperatorRemoved", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZRServiceManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerOwnershipTransferredIterator struct {
	Event *ContractZRServiceManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZRServiceManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZRServiceManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZRServiceManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZRServiceManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZRServiceManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZRServiceManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractZRServiceManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerOwnershipTransferredIterator{contract: _ContractZRServiceManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractZRServiceManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZRServiceManagerOwnershipTransferred)
				if err := _ContractZRServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractZRServiceManagerOwnershipTransferred, error) {
	event := new(ContractZRServiceManagerOwnershipTransferred)
	if err := _ContractZRServiceManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZRServiceManagerUndelegationAnnulledIterator is returned from FilterUndelegationAnnulled and is used to iterate over the raw logs and unpacked data for UndelegationAnnulled events raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerUndelegationAnnulledIterator struct {
	Event *ContractZRServiceManagerUndelegationAnnulled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZRServiceManagerUndelegationAnnulledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZRServiceManagerUndelegationAnnulled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZRServiceManagerUndelegationAnnulled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZRServiceManagerUndelegationAnnulledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZRServiceManagerUndelegationAnnulledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZRServiceManagerUndelegationAnnulled represents a UndelegationAnnulled event raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerUndelegationAnnulled struct {
	Operator      common.Address
	ValidatorHash [32]byte
	Amount        *big.Int
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterUndelegationAnnulled is a free log retrieval operation binding the contract event 0xaed743468d488118a0e1173d01ac45db9dcf8337dff89b037b6264f39d6e5de7.
//
// Solidity: event UndelegationAnnulled(address indexed operator, bytes32 validatorHash, uint256 amount)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) FilterUndelegationAnnulled(opts *bind.FilterOpts, operator []common.Address) (*ContractZRServiceManagerUndelegationAnnulledIterator, error) {

	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.FilterLogs(opts, "UndelegationAnnulled", operatorRule)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerUndelegationAnnulledIterator{contract: _ContractZRServiceManager.contract, event: "UndelegationAnnulled", logs: logs, sub: sub}, nil
}

// WatchUndelegationAnnulled is a free log subscription operation binding the contract event 0xaed743468d488118a0e1173d01ac45db9dcf8337dff89b037b6264f39d6e5de7.
//
// Solidity: event UndelegationAnnulled(address indexed operator, bytes32 validatorHash, uint256 amount)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) WatchUndelegationAnnulled(opts *bind.WatchOpts, sink chan<- *ContractZRServiceManagerUndelegationAnnulled, operator []common.Address) (event.Subscription, error) {

	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.WatchLogs(opts, "UndelegationAnnulled", operatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZRServiceManagerUndelegationAnnulled)
				if err := _ContractZRServiceManager.contract.UnpackLog(event, "UndelegationAnnulled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUndelegationAnnulled is a log parse operation binding the contract event 0xaed743468d488118a0e1173d01ac45db9dcf8337dff89b037b6264f39d6e5de7.
//
// Solidity: event UndelegationAnnulled(address indexed operator, bytes32 validatorHash, uint256 amount)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) ParseUndelegationAnnulled(log types.Log) (*ContractZRServiceManagerUndelegationAnnulled, error) {
	event := new(ContractZRServiceManagerUndelegationAnnulled)
	if err := _ContractZRServiceManager.contract.UnpackLog(event, "UndelegationAnnulled", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZRServiceManagerUndelegationInitiatedIterator is returned from FilterUndelegationInitiated and is used to iterate over the raw logs and unpacked data for UndelegationInitiated events raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerUndelegationInitiatedIterator struct {
	Event *ContractZRServiceManagerUndelegationInitiated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZRServiceManagerUndelegationInitiatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZRServiceManagerUndelegationInitiated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZRServiceManagerUndelegationInitiated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZRServiceManagerUndelegationInitiatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZRServiceManagerUndelegationInitiatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZRServiceManagerUndelegationInitiated represents a UndelegationInitiated event raised by the ContractZRServiceManager contract.
type ContractZRServiceManagerUndelegationInitiated struct {
	Operator          common.Address
	ValidatorHash     [32]byte
	Amount            *big.Int
	UndelegationBlock *big.Int
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterUndelegationInitiated is a free log retrieval operation binding the contract event 0x775b88cbd39cf51dfe91702ef169ea2352cfb859b1519ec3feb3b6b5b363a8c8.
//
// Solidity: event UndelegationInitiated(address indexed operator, bytes32 validatorHash, uint256 amount, uint256 undelegationBlock)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) FilterUndelegationInitiated(opts *bind.FilterOpts, operator []common.Address) (*ContractZRServiceManagerUndelegationInitiatedIterator, error) {

	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.FilterLogs(opts, "UndelegationInitiated", operatorRule)
	if err != nil {
		return nil, err
	}
	return &ContractZRServiceManagerUndelegationInitiatedIterator{contract: _ContractZRServiceManager.contract, event: "UndelegationInitiated", logs: logs, sub: sub}, nil
}

// WatchUndelegationInitiated is a free log subscription operation binding the contract event 0x775b88cbd39cf51dfe91702ef169ea2352cfb859b1519ec3feb3b6b5b363a8c8.
//
// Solidity: event UndelegationInitiated(address indexed operator, bytes32 validatorHash, uint256 amount, uint256 undelegationBlock)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) WatchUndelegationInitiated(opts *bind.WatchOpts, sink chan<- *ContractZRServiceManagerUndelegationInitiated, operator []common.Address) (event.Subscription, error) {

	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _ContractZRServiceManager.contract.WatchLogs(opts, "UndelegationInitiated", operatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZRServiceManagerUndelegationInitiated)
				if err := _ContractZRServiceManager.contract.UnpackLog(event, "UndelegationInitiated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUndelegationInitiated is a log parse operation binding the contract event 0x775b88cbd39cf51dfe91702ef169ea2352cfb859b1519ec3feb3b6b5b363a8c8.
//
// Solidity: event UndelegationInitiated(address indexed operator, bytes32 validatorHash, uint256 amount, uint256 undelegationBlock)
func (_ContractZRServiceManager *ContractZRServiceManagerFilterer) ParseUndelegationInitiated(log types.Log) (*ContractZRServiceManagerUndelegationInitiated, error) {
	event := new(ContractZRServiceManagerUndelegationInitiated)
	if err := _ContractZRServiceManager.contract.UnpackLog(event, "UndelegationInitiated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
