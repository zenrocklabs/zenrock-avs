// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractZrTaskManager

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBLSSignatureCheckerNonSignerStakesAndSignature is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerNonSignerStakesAndSignature struct {
	NonSignerQuorumBitmapIndices []uint32
	NonSignerPubkeys             []BN254G1Point
	QuorumApks                   []BN254G1Point
	ApkG2                        BN254G2Point
	Sigma                        BN254G1Point
	QuorumApkIndices             []uint32
	TotalStakeIndices            []uint32
	NonSignerStakeIndices        [][]uint32
}

// IBLSSignatureCheckerQuorumStakeTotals is an auto generated low-level Go binding around an user-defined struct.
type IBLSSignatureCheckerQuorumStakeTotals struct {
	SignedStakeForQuorum []*big.Int
	TotalStakeForQuorum  []*big.Int
}

// ZrServiceManagerLibTask is an auto generated low-level Go binding around an user-defined struct.
type ZrServiceManagerLibTask struct {
	TaskId                    uint32
	TaskCreatedBlock          uint32
	QuorumNumbers             []byte
	QuorumThresholdPercentage uint32
}

// ZrServiceManagerLibTaskResponse is an auto generated low-level Go binding around an user-defined struct.
type ZrServiceManagerLibTaskResponse struct {
	ReferenceTaskId    uint32
	InactiveSetZRChain []string
}

// ZrServiceManagerLibTaskResponseMetadata is an auto generated low-level Go binding around an user-defined struct.
type ZrServiceManagerLibTaskResponseMetadata struct {
	TaskResponsedBlock uint32
	HashOfNonSigners   [32]byte
}

// ContractZrTaskManagerMetaData contains all meta data concerning the ContractZrTaskManager contract.
var ContractZrTaskManagerMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_aggregator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_generator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_registryCoordinator\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"},{\"name\":\"_taskResponseWindowBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"initialOwner\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_zrServiceManager\",\"type\":\"address\",\"internalType\":\"contractIZrServiceManager\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"TASK_CHALLENGE_WINDOW_BLOCK\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"blsApkRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIBLSApkRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"checkSignatures\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"referenceBlockNumber\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.QuorumStakeTotals\",\"components\":[{\"name\":\"signedStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"},{\"name\":\"totalStakeForQuorum\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]},{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"createNewTask\",\"inputs\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"delegation\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIDelegationManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getAllTaskIds\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTask\",\"inputs\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structZrServiceManagerLib.Task\",\"components\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"taskCreatedBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskDetails\",\"inputs\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"task\",\"type\":\"tuple\",\"internalType\":\"structZrServiceManagerLib.Task\",\"components\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"taskCreatedBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"taskResponse\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"isChallenged\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskHash\",\"inputs\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskResponse\",\"inputs\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskResponseWindowBlock\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isTaskChallenged\",\"inputs\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"raiseAndResolveChallenge\",\"inputs\":[{\"name\":\"task\",\"type\":\"tuple\",\"internalType\":\"structZrServiceManagerLib.Task\",\"components\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"taskCreatedBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"taskResponse\",\"type\":\"tuple\",\"internalType\":\"structZrServiceManagerLib.TaskResponse\",\"components\":[{\"name\":\"referenceTaskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"inactiveSetZRChain\",\"type\":\"string[]\",\"internalType\":\"string[]\"}]},{\"name\":\"taskResponseMetadata\",\"type\":\"tuple\",\"internalType\":\"structZrServiceManagerLib.TaskResponseMetadata\",\"components\":[{\"name\":\"taskResponsedBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"hashOfNonSigners\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]},{\"name\":\"pubkeysOfNonSigningOperators\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registryCoordinator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIRegistryCoordinator\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"respondToTask\",\"inputs\":[{\"name\":\"task\",\"type\":\"tuple\",\"internalType\":\"structZrServiceManagerLib.Task\",\"components\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"taskCreatedBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"taskResponse\",\"type\":\"tuple\",\"internalType\":\"structZrServiceManagerLib.TaskResponse\",\"components\":[{\"name\":\"referenceTaskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"inactiveSetZRChain\",\"type\":\"string[]\",\"internalType\":\"string[]\"}]},{\"name\":\"nonSignerStakesAndSignature\",\"type\":\"tuple\",\"internalType\":\"structIBLSSignatureChecker.NonSignerStakesAndSignature\",\"components\":[{\"name\":\"nonSignerQuorumBitmapIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerPubkeys\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApks\",\"type\":\"tuple[]\",\"internalType\":\"structBN254.G1Point[]\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"quorumApkIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"totalStakeIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerStakeIndices\",\"type\":\"uint32[][]\",\"internalType\":\"uint32[][]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setStaleStakesForbidden\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"stakeRegistry\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIStakeRegistry\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"staleStakesForbidden\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"trySignatureAndApkVerification\",\"inputs\":[{\"name\":\"msgHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apkG2\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"sigma\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]}],\"outputs\":[{\"name\":\"pairingSuccessful\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"siganatureIsValid\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewTaskCreated\",\"inputs\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"task\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structZrServiceManagerLib.Task\",\"components\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"taskCreatedBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"quorumNumbers\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"quorumThresholdPercentage\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"StaleStakesForbiddenUpdate\",\"inputs\":[{\"name\":\"value\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskChallengedSuccessfully\",\"inputs\":[{\"name\":\"taskId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"challenger\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskResponded\",\"inputs\":[{\"name\":\"response\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structZrServiceManagerLib.TaskResponse\",\"components\":[{\"name\":\"referenceTaskId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"inactiveSetZRChain\",\"type\":\"string[]\",\"internalType\":\"string[]\"}]},{\"name\":\"metadata\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structZrServiceManagerLib.TaskResponseMetadata\",\"components\":[{\"name\":\"taskResponsedBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"hashOfNonSigners\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}]}],\"anonymous\":false}]",
	Bin: "0x6101006040523480156200001257600080fd5b506040516200488d3803806200488d833981016040819052620000359162000313565b83806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663683048356040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200008f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b59190620003af565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b0316635df459466040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200010d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001339190620003af565b6001600160a01b031660c0816001600160a01b03168152505060a0516001600160a01b031663df5cf7236040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b39190620003af565b6001600160a01b031660e05250620001cb82620002a8565b7f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d710680546001600160a01b03199081166001600160a01b03988916179091557f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d710780548216968816969096179095557f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7100805463ffffffff191663ffffffff9490941693909317909255507f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d71088054909316931692909217905550620003d6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200031057600080fd5b50565b60008060008060008060c087890312156200032d57600080fd5b86516200033a81620002fa565b60208801519096506200034d81620002fa565b60408801519095506200036081620002fa565b606088015190945063ffffffff811681146200037b57600080fd5b60808801519093506200038e81620002fa565b60a0880151909250620003a181620002fa565b809150509295509295509295565b600060208284031215620003c257600080fd5b8151620003cf81620002fa565b9392505050565b60805160a05160c05160e05161444562000448600039600081816103df015261151a01526000818161023601526116fc015260008181610275015281816118d20152611a9401526000818161029c0152818161069e015281816112040152818161137d01526115b701526144456000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637b654c5d116100c3578063caf73aa01161007c578063caf73aa0146103c7578063df5cf723146103da578063f2fde38b14610401578063f5c9899d14610414578063f63c5bab1461042f578063ffb3959f1461043857600080fd5b80637b654c5d146102e7578063890a0a4c1461031b5780638da5cb5b146103735780639d3a0f2d14610384578063a5e04bfc14610397578063b98d0908146103ba57600080fd5b806358e493761161011557806358e49376146101de5780635df459461461023157806368304835146102705780636d14a987146102975780636efb4636146102be578063715018a6146102df57600080fd5b8063171f1d5b1461015257806329a1342414610181578063416c7e5e146101965780634c71c165146101ab57806357342d74146101be575b600080fd5b610165610160366004613518565b61047d565b6040805192151583529015156020830152015b60405180910390f35b610189610607565b6040516101789190613569565b6101a96101a43660046135b3565b61069c565b005b6101a96101b9366004613696565b6107db565b6101d16101cc366004613743565b610cbc565b6040516101789190613800565b6102236101ec366004613743565b63ffffffff1660009081527f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7101602052604090205490565b604051908152602001610178565b6102587f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610178565b6102587f000000000000000000000000000000000000000000000000000000000000000081565b6102587f000000000000000000000000000000000000000000000000000000000000000081565b6102d16102cc366004613a66565b610e4f565b604051610178929190613b30565b6101a9611d49565b6000805160206143d083398151915254640100000000900463ffffffff165b60405163ffffffff9091168152602001610178565b610363610329366004613743565b63ffffffff1660009081527f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7103602052604090205460ff1690565b6040519015158152602001610178565b6033546001600160a01b0316610258565b6101a9610392366004613b79565b611d5d565b6103aa6103a5366004613743565b611fb4565b6040516101789493929190613bd9565b6065546103639060ff1681565b6101a96103d5366004613c0a565b612180565b6102587f000000000000000000000000000000000000000000000000000000000000000081565b6101a961040f366004613ca6565b6125f6565b6000805160206143d08339815191525463ffffffff16610306565b61030661271081565b610223610446366004613743565b63ffffffff1660009081527f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7102602052604090205490565b60008060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001878760000151886020015188600001516000600281106104c5576104c5613cc3565b60200201518951600160200201518a602001516000600281106104ea576104ea613cc3565b60200201518b6020015160016002811061050657610506613cc3565b602090810291909101518c518d8301516040516105639a99989796959401988952602089019790975260408801959095526060870193909352608086019190915260a085015260c084015260e08301526101008201526101200190565b6040516020818303038152906040528051906020012060001c6105869190613cd9565b90506105f961059f610598888461266c565b86906126fd565b6105a7612792565b6105ef6105e0856105da604080518082018252600080825260209182015281518083019092526001825260029082015290565b9061266c565b6105e98c612852565b906126fd565b886201d4c06128e1565b909890975095505050505050565b606060006000805160206143d08339815191526005810180546040805160208084028201810190925282815293945083018282801561069157602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116106545790505b505050505091505090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071e9190613cfb565b6001600160a01b0316336001600160a01b0316146107cf5760405162461bcd60e51b815260206004820152605c60248201527f424c535369676e6174757265436865636b65722e6f6e6c79436f6f7264696e6160448201527f746f724f776e65723a2063616c6c6572206973206e6f7420746865206f776e6560648201527f72206f6620746865207265676973747279436f6f7264696e61746f7200000000608482015260a4015b60405180910390fd5b6107d881612b17565b50565b60006107ea6020850185613743565b63ffffffff811660009081527f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d710260205260409020549091506000805160206143d0833981519152906108885760405162461bcd60e51b815260206004820152602160248201527f5461736b206861736e2774206265656e20726573706f6e64656420746f2079656044820152601d60fa1b60648201526084016107c6565b848460405160200161089b929190613e59565b60408051601f19818403018152918152815160209283012063ffffffff85166000908152600285019093529120541461093c5760405162461bcd60e51b815260206004820152603d60248201527f5461736b20726573706f6e736520646f6573206e6f74206d617463682074686560448201527f206f6e65207265636f7264656420696e2074686520636f6e747261637400000060648201526084016107c6565b63ffffffff8216600090815260038201602052604090205460ff16156109d65760405162461bcd60e51b815260206004820152604360248201527f54686520726573706f6e736520746f2074686973207461736b2068617320616c60448201527f7265616479206265656e206368616c6c656e676564207375636365737366756c606482015262363c9760e91b608482015260a4016107c6565b6127106109e66020860186613743565b6109f09190613ea9565b63ffffffff164363ffffffff161115610a715760405162461bcd60e51b815260206004820152603760248201527f546865206368616c6c656e676520706572696f6420666f72207468697320746160448201527f736b2068617320616c726561647920657870697265642e00000000000000000060648201526084016107c6565b610a7e6020860186613743565b63ffffffff16610a916020880188613743565b63ffffffff1614610ad75760405162461bcd60e51b815260206004820152601060248201526f0a8c2e6d640928840dad2e6dac2e8c6d60831b60448201526064016107c6565b600083516001600160401b03811115610af257610af26133c7565b604051908082528060200260200182016040528015610b1b578160200160208202803683370190505b50905060005b8451811015610b8d57610b5e858281518110610b3f57610b3f613cc3565b6020026020010151805160009081526020918201519091526040902090565b828281518110610b7057610b70613cc3565b602090810291909101015280610b8581613ecd565b915050610b21565b506000610ba06040890160208a01613743565b82604051602001610bb2929190613ee6565b60405160208183030381529060405280519060200120905085602001358114610c5c5760405162461bcd60e51b815260206004820152605060248201527f546865207075626b657973206f66206e6f6e2d7369676e696e67206f7065726160448201527f746f727320737570706c69656420627920746865206368616c6c656e6765722060648201526f30b932903737ba1031b7b93932b1ba1760811b608482015260a4016107c6565b63ffffffff84166000818152600385016020908152604091829020805460ff1916600117905590513381527fc20d1bb0f1623680306b83d4ff4bb99a2beb9d86d97832f3ca40fd13a29df1ec910160405180910390a25050505050505050565b60408051608081018252600080825260208083018290526060838501819052830182905263ffffffff851682527f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7101905291909120546000805160206143d083398151915290610d635760405162461bcd60e51b815260206004820152601360248201527215185cdac8191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016107c6565b63ffffffff80841660009081526004830160209081526040918290208251608081018452815480861682526401000000009004909416918401919091526001810180549192840191610db490613f2e565b80601f0160208091040260200160405190810160405280929190818152602001828054610de090613f2e565b8015610e2d5780601f10610e0257610100808354040283529160200191610e2d565b820191906000526020600020905b815481529060010190602001808311610e1057829003601f168201915b50505091835250506002919091015463ffffffff166020909101529392505050565b60408051808201909152606080825260208201526000848103610ec85760405162461bcd60e51b815260206004820152603760248201526000805160206143f083398151915260448201527f7265733a20656d7074792071756f72756d20696e70757400000000000000000060648201526084016107c6565b60408301515185148015610ee0575060a08301515185145b8015610ef0575060c08301515185145b8015610f00575060e08301515185145b610f6a5760405162461bcd60e51b815260206004820152604160248201526000805160206143f083398151915260448201527f7265733a20696e7075742071756f72756d206c656e677468206d69736d6174636064820152600d60fb1b608482015260a4016107c6565b82515160208401515114610fe25760405162461bcd60e51b8152602060048201526044602482018190526000805160206143f0833981519152908201527f7265733a20696e707574206e6f6e7369676e6572206c656e677468206d69736d6064820152630c2e8c6d60e31b608482015260a4016107c6565b4363ffffffff168463ffffffff16106110515760405162461bcd60e51b815260206004820152603c60248201526000805160206143f083398151915260448201527f7265733a20696e76616c6964207265666572656e636520626c6f636b0000000060648201526084016107c6565b6040805180820182526000808252602080830191909152825180840190935260608084529083015290866001600160401b03811115611092576110926133c7565b6040519080825280602002602001820160405280156110bb578160200160208202803683370190505b506020820152866001600160401b038111156110d9576110d96133c7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b50815260408051808201909152606080825260208201528560200151516001600160401b03811115611136576111366133c7565b60405190808252806020026020018201604052801561115f578160200160208202803683370190505b5081526020860151516001600160401b0381111561117f5761117f6133c7565b6040519080825280602002602001820160405280156111a8578160200160208202803683370190505b508160200181905250600061127a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051639aa1653d60e01b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350639aa1653d925060048083019260209291908290030181865afa158015611251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112759190613f62565b612b5e565b905060005b8760200151518110156114f6576112a588602001518281518110610b3f57610b3f613cc3565b836020015182815181106112bb576112bb613cc3565b6020908102919091010152801561137b5760208301516112dc600183613f85565b815181106112ec576112ec613cc3565b602002602001015160001c8360200151828151811061130d5761130d613cc3565b602002602001015160001c1161137b576040805162461bcd60e51b81526020600482015260248101919091526000805160206143f083398151915260448201527f7265733a206e6f6e5369676e65725075626b657973206e6f7420736f7274656460648201526084016107c6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304ec6351846020015183815181106113c0576113c0613cc3565b60200260200101518b8b6000015185815181106113df576113df613cc3565b60200260200101516040518463ffffffff1660e01b815260040161141c9392919092835263ffffffff918216602084015216604082015260600190565b602060405180830381865afa158015611439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145d9190613f98565b6001600160c01b03168360000151828151811061147c5761147c613cc3565b6020026020010181815250506114e26105986114b684866000015185815181106114a8576114a8613cc3565b602002602001015116612bf1565b8a6020015184815181106114cc576114cc613cc3565b6020026020010151612c1c90919063ffffffff16565b9450806114ee81613ecd565b91505061127f565b505061150183612cff565b60655490935060ff1660008161151857600061159a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c448feb86040518163ffffffff1660e01b8152600401602060405180830381865afa158015611576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159a9190613fc1565b905060005b8a811015611c185782156116fa578963ffffffff16827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663249a0c428f8f868181106115f6576115f6613cc3565b60405160e085901b6001600160e01b031916815292013560f81c600483015250602401602060405180830381865afa158015611636573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165a9190613fc1565b6116649190613fda565b116116fa5760405162461bcd60e51b815260206004820152606660248201526000805160206143f083398151915260448201527f7265733a205374616b6552656769737472792075706461746573206d7573742060648201527f62652077697468696e207769746864726177616c44656c6179426c6f636b732060848201526577696e646f7760d01b60a482015260c4016107c6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166368bccaac8d8d8481811061173b5761173b613cc3565b9050013560f81c60f81b60f81c8c8c60a00151858151811061175f5761175f613cc3565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa1580156117bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117df9190613fed565b6001600160401b0319166118028a604001518381518110610b3f57610b3f613cc3565b67ffffffffffffffff19161461189e5760405162461bcd60e51b815260206004820152606160248201526000805160206143f083398151915260448201527f7265733a2071756f72756d41706b206861736820696e2073746f72616765206460648201527f6f6573206e6f74206d617463682070726f76696465642071756f72756d2061706084820152606b60f81b60a482015260c4016107c6565b6118ce896040015182815181106118b7576118b7613cc3565b6020026020010151876126fd90919063ffffffff16565b95507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c8294c568d8d8481811061191157611911613cc3565b9050013560f81c60f81b60f81c8c8c60c00151858151811061193557611935613cc3565b60209081029190910101516040516001600160e01b031960e086901b16815260ff909316600484015263ffffffff9182166024840152166044820152606401602060405180830381865afa158015611991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b59190614018565b856020015182815181106119cb576119cb613cc3565b6001600160601b039092166020928302919091018201528501518051829081106119f7576119f7613cc3565b602002602001015185600001518281518110611a1557611a15613cc3565b60200260200101906001600160601b031690816001600160601b0316815250506000805b8a6020015151811015611c0357611a8d86600001518281518110611a5f57611a5f613cc3565b60200260200101518f8f86818110611a7957611a79613cc3565b600192013560f81c9290921c811614919050565b15611bf1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f2be94ae8f8f86818110611ad357611ad3613cc3565b9050013560f81c60f81b60f81c8e89602001518581518110611af757611af7613cc3565b60200260200101518f60e001518881518110611b1557611b15613cc3565b60200260200101518781518110611b2e57611b2e613cc3565b60209081029190910101516040516001600160e01b031960e087901b16815260ff909416600485015263ffffffff92831660248501526044840191909152166064820152608401602060405180830381865afa158015611b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb69190614018565b8751805185908110611bca57611bca613cc3565b60200260200101818151611bde9190614041565b6001600160601b03169052506001909101905b80611bfb81613ecd565b915050611a39565b50508080611c1090613ecd565b91505061159f565b505050600080611c328c868a606001518b6080015161047d565b9150915081611ca35760405162461bcd60e51b815260206004820152604360248201526000805160206143f083398151915260448201527f7265733a2070616972696e6720707265636f6d70696c652063616c6c206661696064820152621b195960ea1b608482015260a4016107c6565b80611d045760405162461bcd60e51b815260206004820152603960248201526000805160206143f083398151915260448201527f7265733a207369676e617475726520697320696e76616c69640000000000000060648201526084016107c6565b50506000878260200151604051602001611d1f929190613ee6565b60408051808303601f190181529190528051602090910120929b929a509198505050505050505050565b611d51612d9a565b611d5b6000612df4565b565b7f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7107546000805160206143d0833981519152906001600160a01b03163314611df05760405162461bcd60e51b815260206004820152602160248201527f5461736b2067656e657261746f72206d757374206265207468652063616c6c656044820152603960f91b60648201526084016107c6565b60408051608081018252606081830181905263ffffffff8881168352438116602080850191909152908816918301919091528251601f860182900482028101820190935284835290919085908590819084018382808284376000920182905250604086019490945250611e659150612b059050565b905081604051602001611e789190613800565b60408051601f19818403018152918152815160209283012063ffffffff808b1660009081526001808701865284822093909355600486018552839020865181549588015183166401000000000267ffffffffffffffff1990961692169190911793909317835590840151849291820190611ef290826140b0565b50606091909101516002909101805463ffffffff191663ffffffff928316179055600582018054600181018255600091825260209091206008820401805460079092166004026101000a80840219909216928a16918202929092179091556040517ff31388a74ee5033e008e2f1789f853591ac3bb7c976ec29b94bdcc9fd46a7ca590611f80908590613800565b60405180910390a2805463ffffffff9097166401000000000267ffffffff0000000019909716969096179095555050505050565b60408051608081018252600080825260208083018290526060838501819052830182905263ffffffff851682527f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7101905291822054909190819081906000805160206143d0833981519152906120615760405162461bcd60e51b815260206004820152601360248201527215185cdac8191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016107c6565b63ffffffff80871660009081526004830160209081526040808320600180870184528285205460028801855283862054600389018652958490205484516080810186528454808a1682526401000000009004909816958801959095529082018054929691959460ff169391928792840191906120dc90613f2e565b80601f016020809104026020016040519081016040528092919081815260200182805461210890613f2e565b80156121555780601f1061212a57610100808354040283529160200191612155565b820191906000526020600020905b81548152906001019060200180831161213857829003601f168201915b50505091835250506002919091015463ffffffff166020909101529a92995090975095509350505050565b7f9e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7106546000805160206143d0833981519152906001600160a01b031633146122095760405162461bcd60e51b815260206004820152601d60248201527f41676772656761746f72206d757374206265207468652063616c6c657200000060448201526064016107c6565b600061221b6040860160208701613743565b905036600061222d604088018861416f565b909250905060006122446080890160608a01613743565b90506000805160206143d083398151915261225f818a612e46565b6000600282018161227360208d018d613743565b63ffffffff1663ffffffff16815260200190815260200160002054146122f05760405162461bcd60e51b815260206004820152602c60248201527f41676772656761746f722068617320616c726561647920726573706f6e64656460448201526b20746f20746865207461736b60a01b60648201526084016107c6565b80546123029063ffffffff1686613ea9565b63ffffffff164363ffffffff1611156123735760405162461bcd60e51b815260206004820152602d60248201527f41676772656761746f722068617320726573706f6e64656420746f207468652060448201526c7461736b20746f6f206c61746560981b60648201526084016107c6565b60008860405160200161238691906141b5565b6040516020818303038152906040528051906020012090506000806123ae8388888b8e610e4f565b9150915060005b868110156124ad578560ff16836020015182815181106123d7576123d7613cc3565b60200260200101516123e991906141c8565b6001600160601b031660438460000151838151811061240a5761240a613cc3565b60200260200101516001600160601b031661242591906141eb565b101561249b576040805162461bcd60e51b81526020600482015260248101919091527f5369676e61746f7269657320646f206e6f74206f776e206174206c656173742060448201527f7468726573686f6c642070657263656e74616765206f6620612071756f72756d60648201526084016107c6565b806124a581613ecd565b9150506123b5565b5060006124bd60208d018d614202565b905011156125355760088401546001600160a01b031663c63e3c506124e560208e018e614202565b6040518363ffffffff1660e01b815260040161250292919061424b565b600060405180830381600087803b15801561251c57600080fd5b505af1158015612530573d6000803e3d6000fd5b505050505b60408051808201825263ffffffff43168152602080820184905291519091612561918e91849101614267565b604051602081830303815290604052805190602001208560020160008f60000160208101906125909190613743565b63ffffffff1663ffffffff168152602001908152602001600020819055507fb3d0a4ff7bf22dfcf9cb480d1e535911448d11b47a0fa850ff82f39bf3ce35678c826040516125df929190614267565b60405180910390a150505050505050505050505050565b6125fe612d9a565b6001600160a01b0381166126635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107c6565b6107d881612df4565b60408051808201909152600080825260208201526126886132ed565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa905080806126b757fe5b50806126f55760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016107c6565b505092915050565b604080518082019091526000808252602082015261271961330b565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa9050808061275457fe5b50806126f55760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016107c6565b61279a613329565b50604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60208381019190915281019190915290565b6040805180820190915260008082526020820152600080806128826000805160206143b083398151915286613cd9565b90505b61288e81612f03565b90935091506000805160206143b083398151915282830983036128c7576040805180820190915290815260208101919091529392505050565b6000805160206143b0833981519152600182089050612885565b60408051808201825286815260208082018690528251808401909352868352820184905260009182919061291361334e565b60005b6002811015612ad857600061292c8260066141eb565b905084826002811061294057612940613cc3565b60200201515183612952836000613fda565b600c811061296257612962613cc3565b602002015284826002811061297957612979613cc3565b602002015160200151838260016129909190613fda565b600c81106129a0576129a0613cc3565b60200201528382600281106129b7576129b7613cc3565b60200201515151836129ca836002613fda565b600c81106129da576129da613cc3565b60200201528382600281106129f1576129f1613cc3565b6020020151516001602002015183612a0a836003613fda565b600c8110612a1a57612a1a613cc3565b6020020152838260028110612a3157612a31613cc3565b602002015160200151600060028110612a4c57612a4c613cc3565b602002015183612a5d836004613fda565b600c8110612a6d57612a6d613cc3565b6020020152838260028110612a8457612a84613cc3565b602002015160200151600160028110612a9f57612a9f613cc3565b602002015183612ab0836005613fda565b600c8110612ac057612ac0613cc3565b60200201525080612ad081613ecd565b915050612916565b50612ae161336d565b60006020826101808560088cfa9151919c9115159b50909950505050505050505050565b6000805160206143d083398151915290565b6065805460ff19168215159081179091556040519081527f40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc9060200160405180910390a150565b600080612b6a84612f85565b9050808360ff166001901b11612be85760405162461bcd60e51b815260206004820152603f60248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206269746d61702065786365656473206d61782076616c75650060648201526084016107c6565b90505b92915050565b6000805b8215612beb57612c06600184613f85565b9092169180612c148161429a565b915050612bf5565b60408051808201909152600080825260208201526102008261ffff1610612c785760405162461bcd60e51b815260206004820152601060248201526f7363616c61722d746f6f2d6c6172676560801b60448201526064016107c6565b8161ffff16600103612c8b575081612beb565b6040805180820190915260008082526020820181905284906001905b8161ffff168661ffff1610612cf457600161ffff871660ff83161c81169003612cd757612cd484846126fd565b93505b612ce183846126fd565b92506201fffe600192831b169101612ca7565b509195945050505050565b60408051808201909152600080825260208201528151158015612d2457506020820151155b15612d42575050604080518082019091526000808252602082015290565b6040518060400160405280836000015181526020016000805160206143b08339815191528460200151612d759190613cd9565b612d8d906000805160206143b0833981519152613f85565b905292915050565b919050565b6033546001600160a01b03163314611d5b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107c6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081604051602001612e5991906142bb565b6040516020818303038152906040528051906020012090506000836001016000846000016020810190612e8c9190613743565b63ffffffff1663ffffffff168152602001908152602001600020549050808214612eb582613115565b612ebe84613115565b604051602001612ecf92919061432c565b60405160208183030381529060405290612efc5760405162461bcd60e51b81526004016107c6919061439c565b5050505050565b600080806000805160206143b083398151915260036000805160206143b0833981519152866000805160206143b0833981519152888909090890506000612f79827f0c19139cb84c680a6e14116da060561765e05aa45a1c72a34f082305b61f3f526000805160206143b0833981519152613244565b91959194509092505050565b60006101008251111561300e5760405162461bcd60e51b8152602060048201526044602482018190527f4269746d61705574696c732e6f72646572656442797465734172726179546f42908201527f69746d61703a206f7264657265644279746573417272617920697320746f6f206064820152636c6f6e6760e01b608482015260a4016107c6565b815160000361301f57506000919050565b6000808360008151811061303557613035613cc3565b0160200151600160f89190911c81901b92505b845181101561310c5784818151811061306357613063613cc3565b0160200151600160f89190911c1b91508282116130f85760405162461bcd60e51b815260206004820152604760248201527f4269746d61705574696c732e6f72646572656442797465734172726179546f4260448201527f69746d61703a206f72646572656442797465734172726179206973206e6f74206064820152661bdc99195c995960ca1b608482015260a4016107c6565b9181179161310581613ecd565b9050613048565b50909392505050565b604080518181526060818101835291600091906020820181803683370190505090506f181899199a1a9b1b9c1cb0b131b232b360811b60005b602081101561310c5781600486836020811061316c5761316c613cc3565b1a60f81b6001600160f81b031916901c60f81c60ff166010811061319257613192613cc3565b1a60f81b836131a28360026141eb565b815181106131b2576131b2613cc3565b60200101906001600160f81b031916908160001a905350818582602081106131dc576131dc613cc3565b1a600f16601081106131f0576131f0613cc3565b1a60f81b836132008360026141eb565b61320b906001613fda565b8151811061321b5761321b613cc3565b60200101906001600160f81b031916908160001a9053508061323c81613ecd565b91505061314e565b60008061324f61336d565b61325761338b565b602080825281810181905260408201819052606082018890526080820187905260a082018690528260c08360056107d05a03fa9250828061329457fe5b50826132e25760405162461bcd60e51b815260206004820152601a60248201527f424e3235342e6578704d6f643a2063616c6c206661696c75726500000000000060448201526064016107c6565b505195945050505050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806040016040528061333c6133a9565b81526020016133496133a9565b905290565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156133ff576133ff6133c7565b60405290565b60405161010081016001600160401b03811182821017156133ff576133ff6133c7565b604051601f8201601f191681016001600160401b0381118282101715613450576134506133c7565b604052919050565b60006040828403121561346a57600080fd5b6134726133dd565b9050813581526020820135602082015292915050565b600082601f83011261349957600080fd5b6134a16133dd565b8060408401858111156134b357600080fd5b845b818110156134cd5780358452602093840193016134b5565b509095945050505050565b6000608082840312156134ea57600080fd5b6134f26133dd565b90506134fe8383613488565b815261350d8360408401613488565b602082015292915050565b600080600080610120858703121561352f57600080fd5b843593506135408660208701613458565b925061354f86606087016134d8565b915061355e8660e08701613458565b905092959194509250565b6020808252825182820181905260009190848201906040850190845b818110156135a757835163ffffffff1683529284019291840191600101613585565b50909695505050505050565b6000602082840312156135c557600080fd5b81358015158114612be857600080fd5b6000608082840312156135e757600080fd5b50919050565b6000604082840312156135e757600080fd5b60006001600160401b03821115613618576136186133c7565b5060051b60200190565b600082601f83011261363357600080fd5b81356020613648613643836135ff565b613428565b82815260069290921b8401810191818101908684111561366757600080fd5b8286015b8481101561368b5761367d8882613458565b83529183019160400161366b565b509695505050505050565b60008060008060a085870312156136ac57600080fd5b84356001600160401b03808211156136c357600080fd5b6136cf888389016135d5565b955060208701359150808211156136e557600080fd5b6136f1888389016135ed565b945061370088604089016135ed565b9350608087013591508082111561371657600080fd5b5061372387828801613622565b91505092959194509250565b803563ffffffff81168114612d9557600080fd5b60006020828403121561375557600080fd5b61375e8261372f565b9392505050565b60005b83811015613780578181015183820152602001613768565b50506000910152565b600081518084526137a1816020860160208601613765565b601f01601f19169290920160200192915050565b600063ffffffff8083511684528060208401511660208501526040830151608060408601526137e76080860182613789565b9050816060850151166060860152809250505092915050565b60208152600061375e60208301846137b5565b60008083601f84011261382557600080fd5b5081356001600160401b0381111561383c57600080fd5b60208301915083602082850101111561385457600080fd5b9250929050565b600082601f83011261386c57600080fd5b8135602061387c613643836135ff565b82815260059290921b8401810191818101908684111561389b57600080fd5b8286015b8481101561368b576138b08161372f565b835291830191830161389f565b600082601f8301126138ce57600080fd5b813560206138de613643836135ff565b82815260059290921b840181019181810190868411156138fd57600080fd5b8286015b8481101561368b5780356001600160401b038111156139205760008081fd5b61392e8986838b010161385b565b845250918301918301613901565b6000610180828403121561394f57600080fd5b613957613405565b905081356001600160401b038082111561397057600080fd5b61397c8583860161385b565b8352602084013591508082111561399257600080fd5b61399e85838601613622565b602084015260408401359150808211156139b757600080fd5b6139c385838601613622565b60408401526139d585606086016134d8565b60608401526139e78560e08601613458565b6080840152610120840135915080821115613a0157600080fd5b613a0d8583860161385b565b60a0840152610140840135915080821115613a2757600080fd5b613a338583860161385b565b60c0840152610160840135915080821115613a4d57600080fd5b50613a5a848285016138bd565b60e08301525092915050565b600080600080600060808688031215613a7e57600080fd5b8535945060208601356001600160401b0380821115613a9c57600080fd5b613aa889838a01613813565b9096509450849150613abc6040890161372f565b93506060880135915080821115613ad257600080fd5b50613adf8882890161393c565b9150509295509295909350565b600081518084526020808501945080840160005b83811015613b255781516001600160601b031687529582019590820190600101613b00565b509495945050505050565b6040815260008351604080840152613b4b6080840182613aec565b90506020850151603f19848303016060850152613b688282613aec565b925050508260208301529392505050565b60008060008060608587031215613b8f57600080fd5b613b988561372f565b9350613ba66020860161372f565b925060408501356001600160401b03811115613bc157600080fd5b613bcd87828801613813565b95989497509550505050565b608081526000613bec60808301876137b5565b60208301959095525060408101929092521515606090910152919050565b600080600060608486031215613c1f57600080fd5b83356001600160401b0380821115613c3657600080fd5b613c42878388016135d5565b94506020860135915080821115613c5857600080fd5b613c64878388016135ed565b93506040860135915080821115613c7a57600080fd5b50613c878682870161393c565b9150509250925092565b6001600160a01b03811681146107d857600080fd5b600060208284031215613cb857600080fd5b8135612be881613c91565b634e487b7160e01b600052603260045260246000fd5b600082613cf657634e487b7160e01b600052601260045260246000fd5b500690565b600060208284031215613d0d57600080fd5b8151612be881613c91565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112613d5857600080fd5b83016020810192503590506001600160401b03811115613d7757600080fd5b80360382131561385457600080fd5b81835260006020808501808196508560051b810191508460005b87811015613dd6578284038952613db78288613d41565b613dc2868284613d18565b9a87019a9550505090840190600101613da0565b5091979650505050505050565b63ffffffff613df18261372f565b16825260006020820135601e19833603018112613e0d57600080fd5b82016020810190356001600160401b03811115613e2957600080fd5b8060051b3603821315613e3b57600080fd5b60406020860152613e50604086018284613d86565b95945050505050565b606081526000613e6c6060830185613de3565b905063ffffffff613e7c8461372f565b166020830152602083013560408301529392505050565b634e487b7160e01b600052601160045260246000fd5b63ffffffff818116838216019080821115613ec657613ec6613e93565b5092915050565b600060018201613edf57613edf613e93565b5060010190565b63ffffffff60e01b8360e01b1681526000600482018351602080860160005b83811015613f2157815185529382019390820190600101613f05565b5092979650505050505050565b600181811c90821680613f4257607f821691505b6020821081036135e757634e487b7160e01b600052602260045260246000fd5b600060208284031215613f7457600080fd5b815160ff81168114612be857600080fd5b81810381811115612beb57612beb613e93565b600060208284031215613faa57600080fd5b81516001600160c01b0381168114612be857600080fd5b600060208284031215613fd357600080fd5b5051919050565b80820180821115612beb57612beb613e93565b600060208284031215613fff57600080fd5b815167ffffffffffffffff1981168114612be857600080fd5b60006020828403121561402a57600080fd5b81516001600160601b0381168114612be857600080fd5b6001600160601b03828116828216039080821115613ec657613ec6613e93565b601f8211156140ab57600081815260208120601f850160051c810160208610156140885750805b601f850160051c820191505b818110156140a757828155600101614094565b5050505b505050565b81516001600160401b038111156140c9576140c96133c7565b6140dd816140d78454613f2e565b84614061565b602080601f83116001811461411257600084156140fa5750858301515b600019600386901b1c1916600185901b1785556140a7565b600085815260208120601f198616915b8281101561414157888601518255948401946001909101908401614122565b508582101561415f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808335601e1984360301811261418657600080fd5b8301803591506001600160401b038211156141a057600080fd5b60200191503681900382131561385457600080fd5b60208152600061375e6020830184613de3565b6001600160601b038181168382160280821691908281146126f5576126f5613e93565b8082028115828204841417612beb57612beb613e93565b6000808335601e1984360301811261421957600080fd5b8301803591506001600160401b0382111561423357600080fd5b6020019150600581901b360382131561385457600080fd5b60208152600061425f602083018486613d86565b949350505050565b60608152600061427a6060830185613de3565b905063ffffffff8351166020830152602083015160408301529392505050565b600061ffff8083168181036142b1576142b1613e93565b6001019392505050565b60208152600063ffffffff806142d08561372f565b166020840152806142e36020860161372f565b1660408401526142f66040850185613d41565b6080606086015261430b60a086018284613d18565b9150508161431b6060870161372f565b166080850152809250505092915050565b7f5461736b2068617368206d69736d617463682e2045787065637465643a20000081526000835161436481601e850160208801613765565b6b016102932b1b2b4bb32b21d160a51b601e91840191820152835161439081602a840160208801613765565b01602a01949350505050565b60208152600061375e602083018461378956fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479e5d0bf83ef884a66a66b2d439fd65f5546f8f4489c6a744f987ecb90e5d7100424c535369676e6174757265436865636b65722e636865636b5369676e617475a2646970667358221220fc74d1415a20ddc0436e62f9f28f7d159fe4de5d7de25a1377482bc232622b1764736f6c63430008150033",
}

// ContractZrTaskManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractZrTaskManagerMetaData.ABI instead.
var ContractZrTaskManagerABI = ContractZrTaskManagerMetaData.ABI

// ContractZrTaskManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractZrTaskManagerMetaData.Bin instead.
var ContractZrTaskManagerBin = ContractZrTaskManagerMetaData.Bin

// DeployContractZrTaskManager deploys a new Ethereum contract, binding an instance of ContractZrTaskManager to it.
func DeployContractZrTaskManager(auth *bind.TransactOpts, backend bind.ContractBackend, _aggregator common.Address, _generator common.Address, _registryCoordinator common.Address, _taskResponseWindowBlock uint32, initialOwner common.Address, _zrServiceManager common.Address) (common.Address, *types.Transaction, *ContractZrTaskManager, error) {
	parsed, err := ContractZrTaskManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractZrTaskManagerBin), backend, _aggregator, _generator, _registryCoordinator, _taskResponseWindowBlock, initialOwner, _zrServiceManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractZrTaskManager{ContractZrTaskManagerCaller: ContractZrTaskManagerCaller{contract: contract}, ContractZrTaskManagerTransactor: ContractZrTaskManagerTransactor{contract: contract}, ContractZrTaskManagerFilterer: ContractZrTaskManagerFilterer{contract: contract}}, nil
}

// ContractZrTaskManager is an auto generated Go binding around an Ethereum contract.
type ContractZrTaskManager struct {
	ContractZrTaskManagerCaller     // Read-only binding to the contract
	ContractZrTaskManagerTransactor // Write-only binding to the contract
	ContractZrTaskManagerFilterer   // Log filterer for contract events
}

// ContractZrTaskManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractZrTaskManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractZrTaskManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractZrTaskManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractZrTaskManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractZrTaskManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractZrTaskManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractZrTaskManagerSession struct {
	Contract     *ContractZrTaskManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts          // Call options to use throughout this session
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// ContractZrTaskManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractZrTaskManagerCallerSession struct {
	Contract *ContractZrTaskManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                // Call options to use throughout this session
}

// ContractZrTaskManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractZrTaskManagerTransactorSession struct {
	Contract     *ContractZrTaskManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                // Transaction auth options to use throughout this session
}

// ContractZrTaskManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractZrTaskManagerRaw struct {
	Contract *ContractZrTaskManager // Generic contract binding to access the raw methods on
}

// ContractZrTaskManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractZrTaskManagerCallerRaw struct {
	Contract *ContractZrTaskManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ContractZrTaskManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractZrTaskManagerTransactorRaw struct {
	Contract *ContractZrTaskManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractZrTaskManager creates a new instance of ContractZrTaskManager, bound to a specific deployed contract.
func NewContractZrTaskManager(address common.Address, backend bind.ContractBackend) (*ContractZrTaskManager, error) {
	contract, err := bindContractZrTaskManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManager{ContractZrTaskManagerCaller: ContractZrTaskManagerCaller{contract: contract}, ContractZrTaskManagerTransactor: ContractZrTaskManagerTransactor{contract: contract}, ContractZrTaskManagerFilterer: ContractZrTaskManagerFilterer{contract: contract}}, nil
}

// NewContractZrTaskManagerCaller creates a new read-only instance of ContractZrTaskManager, bound to a specific deployed contract.
func NewContractZrTaskManagerCaller(address common.Address, caller bind.ContractCaller) (*ContractZrTaskManagerCaller, error) {
	contract, err := bindContractZrTaskManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerCaller{contract: contract}, nil
}

// NewContractZrTaskManagerTransactor creates a new write-only instance of ContractZrTaskManager, bound to a specific deployed contract.
func NewContractZrTaskManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractZrTaskManagerTransactor, error) {
	contract, err := bindContractZrTaskManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerTransactor{contract: contract}, nil
}

// NewContractZrTaskManagerFilterer creates a new log filterer instance of ContractZrTaskManager, bound to a specific deployed contract.
func NewContractZrTaskManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractZrTaskManagerFilterer, error) {
	contract, err := bindContractZrTaskManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerFilterer{contract: contract}, nil
}

// bindContractZrTaskManager binds a generic wrapper to an already deployed contract.
func bindContractZrTaskManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractZrTaskManagerMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractZrTaskManager *ContractZrTaskManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractZrTaskManager.Contract.ContractZrTaskManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractZrTaskManager *ContractZrTaskManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.ContractZrTaskManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractZrTaskManager *ContractZrTaskManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.ContractZrTaskManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractZrTaskManager *ContractZrTaskManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractZrTaskManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractZrTaskManager *ContractZrTaskManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractZrTaskManager *ContractZrTaskManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.contract.Transact(opts, method, params...)
}

// TASKCHALLENGEWINDOWBLOCK is a free data retrieval call binding the contract method 0xf63c5bab.
//
// Solidity: function TASK_CHALLENGE_WINDOW_BLOCK() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) TASKCHALLENGEWINDOWBLOCK(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "TASK_CHALLENGE_WINDOW_BLOCK")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// TASKCHALLENGEWINDOWBLOCK is a free data retrieval call binding the contract method 0xf63c5bab.
//
// Solidity: function TASK_CHALLENGE_WINDOW_BLOCK() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) TASKCHALLENGEWINDOWBLOCK() (uint32, error) {
	return _ContractZrTaskManager.Contract.TASKCHALLENGEWINDOWBLOCK(&_ContractZrTaskManager.CallOpts)
}

// TASKCHALLENGEWINDOWBLOCK is a free data retrieval call binding the contract method 0xf63c5bab.
//
// Solidity: function TASK_CHALLENGE_WINDOW_BLOCK() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) TASKCHALLENGEWINDOWBLOCK() (uint32, error) {
	return _ContractZrTaskManager.Contract.TASKCHALLENGEWINDOWBLOCK(&_ContractZrTaskManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) BlsApkRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "blsApkRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractZrTaskManager.Contract.BlsApkRegistry(&_ContractZrTaskManager.CallOpts)
}

// BlsApkRegistry is a free data retrieval call binding the contract method 0x5df45946.
//
// Solidity: function blsApkRegistry() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) BlsApkRegistry() (common.Address, error) {
	return _ContractZrTaskManager.Contract.BlsApkRegistry(&_ContractZrTaskManager.CallOpts)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) CheckSignatures(opts *bind.CallOpts, msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "checkSignatures", msgHash, quorumNumbers, referenceBlockNumber, params)

	if err != nil {
		return *new(IBLSSignatureCheckerQuorumStakeTotals), *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(IBLSSignatureCheckerQuorumStakeTotals)).(*IBLSSignatureCheckerQuorumStakeTotals)
	out1 := *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)

	return out0, out1, err

}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractZrTaskManager.Contract.CheckSignatures(&_ContractZrTaskManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// CheckSignatures is a free data retrieval call binding the contract method 0x6efb4636.
//
// Solidity: function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) params) view returns((uint96[],uint96[]), bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) CheckSignatures(msgHash [32]byte, quorumNumbers []byte, referenceBlockNumber uint32, params IBLSSignatureCheckerNonSignerStakesAndSignature) (IBLSSignatureCheckerQuorumStakeTotals, [32]byte, error) {
	return _ContractZrTaskManager.Contract.CheckSignatures(&_ContractZrTaskManager.CallOpts, msgHash, quorumNumbers, referenceBlockNumber, params)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) Delegation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "delegation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) Delegation() (common.Address, error) {
	return _ContractZrTaskManager.Contract.Delegation(&_ContractZrTaskManager.CallOpts)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) Delegation() (common.Address, error) {
	return _ContractZrTaskManager.Contract.Delegation(&_ContractZrTaskManager.CallOpts)
}

// GetAllTaskIds is a free data retrieval call binding the contract method 0x29a13424.
//
// Solidity: function getAllTaskIds() view returns(uint32[])
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) GetAllTaskIds(opts *bind.CallOpts) ([]uint32, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "getAllTaskIds")

	if err != nil {
		return *new([]uint32), err
	}

	out0 := *abi.ConvertType(out[0], new([]uint32)).(*[]uint32)

	return out0, err

}

// GetAllTaskIds is a free data retrieval call binding the contract method 0x29a13424.
//
// Solidity: function getAllTaskIds() view returns(uint32[])
func (_ContractZrTaskManager *ContractZrTaskManagerSession) GetAllTaskIds() ([]uint32, error) {
	return _ContractZrTaskManager.Contract.GetAllTaskIds(&_ContractZrTaskManager.CallOpts)
}

// GetAllTaskIds is a free data retrieval call binding the contract method 0x29a13424.
//
// Solidity: function getAllTaskIds() view returns(uint32[])
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) GetAllTaskIds() ([]uint32, error) {
	return _ContractZrTaskManager.Contract.GetAllTaskIds(&_ContractZrTaskManager.CallOpts)
}

// GetTask is a free data retrieval call binding the contract method 0x57342d74.
//
// Solidity: function getTask(uint32 taskId) view returns((uint32,uint32,bytes,uint32))
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) GetTask(opts *bind.CallOpts, taskId uint32) (ZrServiceManagerLibTask, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "getTask", taskId)

	if err != nil {
		return *new(ZrServiceManagerLibTask), err
	}

	out0 := *abi.ConvertType(out[0], new(ZrServiceManagerLibTask)).(*ZrServiceManagerLibTask)

	return out0, err

}

// GetTask is a free data retrieval call binding the contract method 0x57342d74.
//
// Solidity: function getTask(uint32 taskId) view returns((uint32,uint32,bytes,uint32))
func (_ContractZrTaskManager *ContractZrTaskManagerSession) GetTask(taskId uint32) (ZrServiceManagerLibTask, error) {
	return _ContractZrTaskManager.Contract.GetTask(&_ContractZrTaskManager.CallOpts, taskId)
}

// GetTask is a free data retrieval call binding the contract method 0x57342d74.
//
// Solidity: function getTask(uint32 taskId) view returns((uint32,uint32,bytes,uint32))
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) GetTask(taskId uint32) (ZrServiceManagerLibTask, error) {
	return _ContractZrTaskManager.Contract.GetTask(&_ContractZrTaskManager.CallOpts, taskId)
}

// GetTaskDetails is a free data retrieval call binding the contract method 0xa5e04bfc.
//
// Solidity: function getTaskDetails(uint32 taskId) view returns((uint32,uint32,bytes,uint32) task, bytes32 taskHash, bytes32 taskResponse, bool isChallenged)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) GetTaskDetails(opts *bind.CallOpts, taskId uint32) (struct {
	Task         ZrServiceManagerLibTask
	TaskHash     [32]byte
	TaskResponse [32]byte
	IsChallenged bool
}, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "getTaskDetails", taskId)

	outstruct := new(struct {
		Task         ZrServiceManagerLibTask
		TaskHash     [32]byte
		TaskResponse [32]byte
		IsChallenged bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Task = *abi.ConvertType(out[0], new(ZrServiceManagerLibTask)).(*ZrServiceManagerLibTask)
	outstruct.TaskHash = *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)
	outstruct.TaskResponse = *abi.ConvertType(out[2], new([32]byte)).(*[32]byte)
	outstruct.IsChallenged = *abi.ConvertType(out[3], new(bool)).(*bool)

	return *outstruct, err

}

// GetTaskDetails is a free data retrieval call binding the contract method 0xa5e04bfc.
//
// Solidity: function getTaskDetails(uint32 taskId) view returns((uint32,uint32,bytes,uint32) task, bytes32 taskHash, bytes32 taskResponse, bool isChallenged)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) GetTaskDetails(taskId uint32) (struct {
	Task         ZrServiceManagerLibTask
	TaskHash     [32]byte
	TaskResponse [32]byte
	IsChallenged bool
}, error) {
	return _ContractZrTaskManager.Contract.GetTaskDetails(&_ContractZrTaskManager.CallOpts, taskId)
}

// GetTaskDetails is a free data retrieval call binding the contract method 0xa5e04bfc.
//
// Solidity: function getTaskDetails(uint32 taskId) view returns((uint32,uint32,bytes,uint32) task, bytes32 taskHash, bytes32 taskResponse, bool isChallenged)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) GetTaskDetails(taskId uint32) (struct {
	Task         ZrServiceManagerLibTask
	TaskHash     [32]byte
	TaskResponse [32]byte
	IsChallenged bool
}, error) {
	return _ContractZrTaskManager.Contract.GetTaskDetails(&_ContractZrTaskManager.CallOpts, taskId)
}

// GetTaskHash is a free data retrieval call binding the contract method 0x58e49376.
//
// Solidity: function getTaskHash(uint32 taskId) view returns(bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) GetTaskHash(opts *bind.CallOpts, taskId uint32) ([32]byte, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "getTaskHash", taskId)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetTaskHash is a free data retrieval call binding the contract method 0x58e49376.
//
// Solidity: function getTaskHash(uint32 taskId) view returns(bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) GetTaskHash(taskId uint32) ([32]byte, error) {
	return _ContractZrTaskManager.Contract.GetTaskHash(&_ContractZrTaskManager.CallOpts, taskId)
}

// GetTaskHash is a free data retrieval call binding the contract method 0x58e49376.
//
// Solidity: function getTaskHash(uint32 taskId) view returns(bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) GetTaskHash(taskId uint32) ([32]byte, error) {
	return _ContractZrTaskManager.Contract.GetTaskHash(&_ContractZrTaskManager.CallOpts, taskId)
}

// GetTaskNumber is a free data retrieval call binding the contract method 0x7b654c5d.
//
// Solidity: function getTaskNumber() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) GetTaskNumber(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "getTaskNumber")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetTaskNumber is a free data retrieval call binding the contract method 0x7b654c5d.
//
// Solidity: function getTaskNumber() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) GetTaskNumber() (uint32, error) {
	return _ContractZrTaskManager.Contract.GetTaskNumber(&_ContractZrTaskManager.CallOpts)
}

// GetTaskNumber is a free data retrieval call binding the contract method 0x7b654c5d.
//
// Solidity: function getTaskNumber() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) GetTaskNumber() (uint32, error) {
	return _ContractZrTaskManager.Contract.GetTaskNumber(&_ContractZrTaskManager.CallOpts)
}

// GetTaskResponse is a free data retrieval call binding the contract method 0xffb3959f.
//
// Solidity: function getTaskResponse(uint32 taskId) view returns(bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) GetTaskResponse(opts *bind.CallOpts, taskId uint32) ([32]byte, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "getTaskResponse", taskId)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetTaskResponse is a free data retrieval call binding the contract method 0xffb3959f.
//
// Solidity: function getTaskResponse(uint32 taskId) view returns(bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) GetTaskResponse(taskId uint32) ([32]byte, error) {
	return _ContractZrTaskManager.Contract.GetTaskResponse(&_ContractZrTaskManager.CallOpts, taskId)
}

// GetTaskResponse is a free data retrieval call binding the contract method 0xffb3959f.
//
// Solidity: function getTaskResponse(uint32 taskId) view returns(bytes32)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) GetTaskResponse(taskId uint32) ([32]byte, error) {
	return _ContractZrTaskManager.Contract.GetTaskResponse(&_ContractZrTaskManager.CallOpts, taskId)
}

// GetTaskResponseWindowBlock is a free data retrieval call binding the contract method 0xf5c9899d.
//
// Solidity: function getTaskResponseWindowBlock() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) GetTaskResponseWindowBlock(opts *bind.CallOpts) (uint32, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "getTaskResponseWindowBlock")

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetTaskResponseWindowBlock is a free data retrieval call binding the contract method 0xf5c9899d.
//
// Solidity: function getTaskResponseWindowBlock() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) GetTaskResponseWindowBlock() (uint32, error) {
	return _ContractZrTaskManager.Contract.GetTaskResponseWindowBlock(&_ContractZrTaskManager.CallOpts)
}

// GetTaskResponseWindowBlock is a free data retrieval call binding the contract method 0xf5c9899d.
//
// Solidity: function getTaskResponseWindowBlock() view returns(uint32)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) GetTaskResponseWindowBlock() (uint32, error) {
	return _ContractZrTaskManager.Contract.GetTaskResponseWindowBlock(&_ContractZrTaskManager.CallOpts)
}

// IsTaskChallenged is a free data retrieval call binding the contract method 0x890a0a4c.
//
// Solidity: function isTaskChallenged(uint32 taskId) view returns(bool)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) IsTaskChallenged(opts *bind.CallOpts, taskId uint32) (bool, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "isTaskChallenged", taskId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsTaskChallenged is a free data retrieval call binding the contract method 0x890a0a4c.
//
// Solidity: function isTaskChallenged(uint32 taskId) view returns(bool)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) IsTaskChallenged(taskId uint32) (bool, error) {
	return _ContractZrTaskManager.Contract.IsTaskChallenged(&_ContractZrTaskManager.CallOpts, taskId)
}

// IsTaskChallenged is a free data retrieval call binding the contract method 0x890a0a4c.
//
// Solidity: function isTaskChallenged(uint32 taskId) view returns(bool)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) IsTaskChallenged(taskId uint32) (bool, error) {
	return _ContractZrTaskManager.Contract.IsTaskChallenged(&_ContractZrTaskManager.CallOpts, taskId)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) Owner() (common.Address, error) {
	return _ContractZrTaskManager.Contract.Owner(&_ContractZrTaskManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) Owner() (common.Address, error) {
	return _ContractZrTaskManager.Contract.Owner(&_ContractZrTaskManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) RegistryCoordinator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "registryCoordinator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractZrTaskManager.Contract.RegistryCoordinator(&_ContractZrTaskManager.CallOpts)
}

// RegistryCoordinator is a free data retrieval call binding the contract method 0x6d14a987.
//
// Solidity: function registryCoordinator() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) RegistryCoordinator() (common.Address, error) {
	return _ContractZrTaskManager.Contract.RegistryCoordinator(&_ContractZrTaskManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) StakeRegistry(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "stakeRegistry")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) StakeRegistry() (common.Address, error) {
	return _ContractZrTaskManager.Contract.StakeRegistry(&_ContractZrTaskManager.CallOpts)
}

// StakeRegistry is a free data retrieval call binding the contract method 0x68304835.
//
// Solidity: function stakeRegistry() view returns(address)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) StakeRegistry() (common.Address, error) {
	return _ContractZrTaskManager.Contract.StakeRegistry(&_ContractZrTaskManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) StaleStakesForbidden(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "staleStakesForbidden")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) StaleStakesForbidden() (bool, error) {
	return _ContractZrTaskManager.Contract.StaleStakesForbidden(&_ContractZrTaskManager.CallOpts)
}

// StaleStakesForbidden is a free data retrieval call binding the contract method 0xb98d0908.
//
// Solidity: function staleStakesForbidden() view returns(bool)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) StaleStakesForbidden() (bool, error) {
	return _ContractZrTaskManager.Contract.StaleStakesForbidden(&_ContractZrTaskManager.CallOpts)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractZrTaskManager *ContractZrTaskManagerCaller) TrySignatureAndApkVerification(opts *bind.CallOpts, msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	var out []interface{}
	err := _ContractZrTaskManager.contract.Call(opts, &out, "trySignatureAndApkVerification", msgHash, apk, apkG2, sigma)

	outstruct := new(struct {
		PairingSuccessful bool
		SiganatureIsValid bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PairingSuccessful = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.SiganatureIsValid = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractZrTaskManager *ContractZrTaskManagerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractZrTaskManager.Contract.TrySignatureAndApkVerification(&_ContractZrTaskManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// TrySignatureAndApkVerification is a free data retrieval call binding the contract method 0x171f1d5b.
//
// Solidity: function trySignatureAndApkVerification(bytes32 msgHash, (uint256,uint256) apk, (uint256[2],uint256[2]) apkG2, (uint256,uint256) sigma) view returns(bool pairingSuccessful, bool siganatureIsValid)
func (_ContractZrTaskManager *ContractZrTaskManagerCallerSession) TrySignatureAndApkVerification(msgHash [32]byte, apk BN254G1Point, apkG2 BN254G2Point, sigma BN254G1Point) (struct {
	PairingSuccessful bool
	SiganatureIsValid bool
}, error) {
	return _ContractZrTaskManager.Contract.TrySignatureAndApkVerification(&_ContractZrTaskManager.CallOpts, msgHash, apk, apkG2, sigma)
}

// CreateNewTask is a paid mutator transaction binding the contract method 0x9d3a0f2d.
//
// Solidity: function createNewTask(uint32 taskId, uint32 quorumThresholdPercentage, bytes quorumNumbers) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactor) CreateNewTask(opts *bind.TransactOpts, taskId uint32, quorumThresholdPercentage uint32, quorumNumbers []byte) (*types.Transaction, error) {
	return _ContractZrTaskManager.contract.Transact(opts, "createNewTask", taskId, quorumThresholdPercentage, quorumNumbers)
}

// CreateNewTask is a paid mutator transaction binding the contract method 0x9d3a0f2d.
//
// Solidity: function createNewTask(uint32 taskId, uint32 quorumThresholdPercentage, bytes quorumNumbers) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerSession) CreateNewTask(taskId uint32, quorumThresholdPercentage uint32, quorumNumbers []byte) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.CreateNewTask(&_ContractZrTaskManager.TransactOpts, taskId, quorumThresholdPercentage, quorumNumbers)
}

// CreateNewTask is a paid mutator transaction binding the contract method 0x9d3a0f2d.
//
// Solidity: function createNewTask(uint32 taskId, uint32 quorumThresholdPercentage, bytes quorumNumbers) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactorSession) CreateNewTask(taskId uint32, quorumThresholdPercentage uint32, quorumNumbers []byte) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.CreateNewTask(&_ContractZrTaskManager.TransactOpts, taskId, quorumThresholdPercentage, quorumNumbers)
}

// RaiseAndResolveChallenge is a paid mutator transaction binding the contract method 0x4c71c165.
//
// Solidity: function raiseAndResolveChallenge((uint32,uint32,bytes,uint32) task, (uint32,string[]) taskResponse, (uint32,bytes32) taskResponseMetadata, (uint256,uint256)[] pubkeysOfNonSigningOperators) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactor) RaiseAndResolveChallenge(opts *bind.TransactOpts, task ZrServiceManagerLibTask, taskResponse ZrServiceManagerLibTaskResponse, taskResponseMetadata ZrServiceManagerLibTaskResponseMetadata, pubkeysOfNonSigningOperators []BN254G1Point) (*types.Transaction, error) {
	return _ContractZrTaskManager.contract.Transact(opts, "raiseAndResolveChallenge", task, taskResponse, taskResponseMetadata, pubkeysOfNonSigningOperators)
}

// RaiseAndResolveChallenge is a paid mutator transaction binding the contract method 0x4c71c165.
//
// Solidity: function raiseAndResolveChallenge((uint32,uint32,bytes,uint32) task, (uint32,string[]) taskResponse, (uint32,bytes32) taskResponseMetadata, (uint256,uint256)[] pubkeysOfNonSigningOperators) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerSession) RaiseAndResolveChallenge(task ZrServiceManagerLibTask, taskResponse ZrServiceManagerLibTaskResponse, taskResponseMetadata ZrServiceManagerLibTaskResponseMetadata, pubkeysOfNonSigningOperators []BN254G1Point) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.RaiseAndResolveChallenge(&_ContractZrTaskManager.TransactOpts, task, taskResponse, taskResponseMetadata, pubkeysOfNonSigningOperators)
}

// RaiseAndResolveChallenge is a paid mutator transaction binding the contract method 0x4c71c165.
//
// Solidity: function raiseAndResolveChallenge((uint32,uint32,bytes,uint32) task, (uint32,string[]) taskResponse, (uint32,bytes32) taskResponseMetadata, (uint256,uint256)[] pubkeysOfNonSigningOperators) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactorSession) RaiseAndResolveChallenge(task ZrServiceManagerLibTask, taskResponse ZrServiceManagerLibTaskResponse, taskResponseMetadata ZrServiceManagerLibTaskResponseMetadata, pubkeysOfNonSigningOperators []BN254G1Point) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.RaiseAndResolveChallenge(&_ContractZrTaskManager.TransactOpts, task, taskResponse, taskResponseMetadata, pubkeysOfNonSigningOperators)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractZrTaskManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractZrTaskManager *ContractZrTaskManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.RenounceOwnership(&_ContractZrTaskManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.RenounceOwnership(&_ContractZrTaskManager.TransactOpts)
}

// RespondToTask is a paid mutator transaction binding the contract method 0xcaf73aa0.
//
// Solidity: function respondToTask((uint32,uint32,bytes,uint32) task, (uint32,string[]) taskResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactor) RespondToTask(opts *bind.TransactOpts, task ZrServiceManagerLibTask, taskResponse ZrServiceManagerLibTaskResponse, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractZrTaskManager.contract.Transact(opts, "respondToTask", task, taskResponse, nonSignerStakesAndSignature)
}

// RespondToTask is a paid mutator transaction binding the contract method 0xcaf73aa0.
//
// Solidity: function respondToTask((uint32,uint32,bytes,uint32) task, (uint32,string[]) taskResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerSession) RespondToTask(task ZrServiceManagerLibTask, taskResponse ZrServiceManagerLibTaskResponse, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.RespondToTask(&_ContractZrTaskManager.TransactOpts, task, taskResponse, nonSignerStakesAndSignature)
}

// RespondToTask is a paid mutator transaction binding the contract method 0xcaf73aa0.
//
// Solidity: function respondToTask((uint32,uint32,bytes,uint32) task, (uint32,string[]) taskResponse, (uint32[],(uint256,uint256)[],(uint256,uint256)[],(uint256[2],uint256[2]),(uint256,uint256),uint32[],uint32[],uint32[][]) nonSignerStakesAndSignature) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactorSession) RespondToTask(task ZrServiceManagerLibTask, taskResponse ZrServiceManagerLibTaskResponse, nonSignerStakesAndSignature IBLSSignatureCheckerNonSignerStakesAndSignature) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.RespondToTask(&_ContractZrTaskManager.TransactOpts, task, taskResponse, nonSignerStakesAndSignature)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactor) SetStaleStakesForbidden(opts *bind.TransactOpts, value bool) (*types.Transaction, error) {
	return _ContractZrTaskManager.contract.Transact(opts, "setStaleStakesForbidden", value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.SetStaleStakesForbidden(&_ContractZrTaskManager.TransactOpts, value)
}

// SetStaleStakesForbidden is a paid mutator transaction binding the contract method 0x416c7e5e.
//
// Solidity: function setStaleStakesForbidden(bool value) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactorSession) SetStaleStakesForbidden(value bool) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.SetStaleStakesForbidden(&_ContractZrTaskManager.TransactOpts, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractZrTaskManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.TransferOwnership(&_ContractZrTaskManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractZrTaskManager *ContractZrTaskManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractZrTaskManager.Contract.TransferOwnership(&_ContractZrTaskManager.TransactOpts, newOwner)
}

// ContractZrTaskManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerInitializedIterator struct {
	Event *ContractZrTaskManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZrTaskManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZrTaskManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZrTaskManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZrTaskManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZrTaskManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZrTaskManagerInitialized represents a Initialized event raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractZrTaskManagerInitializedIterator, error) {

	logs, sub, err := _ContractZrTaskManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerInitializedIterator{contract: _ContractZrTaskManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractZrTaskManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _ContractZrTaskManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZrTaskManagerInitialized)
				if err := _ContractZrTaskManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) ParseInitialized(log types.Log) (*ContractZrTaskManagerInitialized, error) {
	event := new(ContractZrTaskManagerInitialized)
	if err := _ContractZrTaskManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZrTaskManagerNewTaskCreatedIterator is returned from FilterNewTaskCreated and is used to iterate over the raw logs and unpacked data for NewTaskCreated events raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerNewTaskCreatedIterator struct {
	Event *ContractZrTaskManagerNewTaskCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZrTaskManagerNewTaskCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZrTaskManagerNewTaskCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZrTaskManagerNewTaskCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZrTaskManagerNewTaskCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZrTaskManagerNewTaskCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZrTaskManagerNewTaskCreated represents a NewTaskCreated event raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerNewTaskCreated struct {
	TaskId uint32
	Task   ZrServiceManagerLibTask
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterNewTaskCreated is a free log retrieval operation binding the contract event 0xf31388a74ee5033e008e2f1789f853591ac3bb7c976ec29b94bdcc9fd46a7ca5.
//
// Solidity: event NewTaskCreated(uint32 indexed taskId, (uint32,uint32,bytes,uint32) task)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) FilterNewTaskCreated(opts *bind.FilterOpts, taskId []uint32) (*ContractZrTaskManagerNewTaskCreatedIterator, error) {

	var taskIdRule []interface{}
	for _, taskIdItem := range taskId {
		taskIdRule = append(taskIdRule, taskIdItem)
	}

	logs, sub, err := _ContractZrTaskManager.contract.FilterLogs(opts, "NewTaskCreated", taskIdRule)
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerNewTaskCreatedIterator{contract: _ContractZrTaskManager.contract, event: "NewTaskCreated", logs: logs, sub: sub}, nil
}

// WatchNewTaskCreated is a free log subscription operation binding the contract event 0xf31388a74ee5033e008e2f1789f853591ac3bb7c976ec29b94bdcc9fd46a7ca5.
//
// Solidity: event NewTaskCreated(uint32 indexed taskId, (uint32,uint32,bytes,uint32) task)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) WatchNewTaskCreated(opts *bind.WatchOpts, sink chan<- *ContractZrTaskManagerNewTaskCreated, taskId []uint32) (event.Subscription, error) {

	var taskIdRule []interface{}
	for _, taskIdItem := range taskId {
		taskIdRule = append(taskIdRule, taskIdItem)
	}

	logs, sub, err := _ContractZrTaskManager.contract.WatchLogs(opts, "NewTaskCreated", taskIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZrTaskManagerNewTaskCreated)
				if err := _ContractZrTaskManager.contract.UnpackLog(event, "NewTaskCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewTaskCreated is a log parse operation binding the contract event 0xf31388a74ee5033e008e2f1789f853591ac3bb7c976ec29b94bdcc9fd46a7ca5.
//
// Solidity: event NewTaskCreated(uint32 indexed taskId, (uint32,uint32,bytes,uint32) task)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) ParseNewTaskCreated(log types.Log) (*ContractZrTaskManagerNewTaskCreated, error) {
	event := new(ContractZrTaskManagerNewTaskCreated)
	if err := _ContractZrTaskManager.contract.UnpackLog(event, "NewTaskCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZrTaskManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerOwnershipTransferredIterator struct {
	Event *ContractZrTaskManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZrTaskManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZrTaskManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZrTaskManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZrTaskManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZrTaskManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZrTaskManagerOwnershipTransferred represents a OwnershipTransferred event raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractZrTaskManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractZrTaskManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerOwnershipTransferredIterator{contract: _ContractZrTaskManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractZrTaskManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractZrTaskManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZrTaskManagerOwnershipTransferred)
				if err := _ContractZrTaskManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) ParseOwnershipTransferred(log types.Log) (*ContractZrTaskManagerOwnershipTransferred, error) {
	event := new(ContractZrTaskManagerOwnershipTransferred)
	if err := _ContractZrTaskManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZrTaskManagerStaleStakesForbiddenUpdateIterator is returned from FilterStaleStakesForbiddenUpdate and is used to iterate over the raw logs and unpacked data for StaleStakesForbiddenUpdate events raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerStaleStakesForbiddenUpdateIterator struct {
	Event *ContractZrTaskManagerStaleStakesForbiddenUpdate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZrTaskManagerStaleStakesForbiddenUpdateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZrTaskManagerStaleStakesForbiddenUpdate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZrTaskManagerStaleStakesForbiddenUpdate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZrTaskManagerStaleStakesForbiddenUpdateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZrTaskManagerStaleStakesForbiddenUpdateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZrTaskManagerStaleStakesForbiddenUpdate represents a StaleStakesForbiddenUpdate event raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerStaleStakesForbiddenUpdate struct {
	Value bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterStaleStakesForbiddenUpdate is a free log retrieval operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) FilterStaleStakesForbiddenUpdate(opts *bind.FilterOpts) (*ContractZrTaskManagerStaleStakesForbiddenUpdateIterator, error) {

	logs, sub, err := _ContractZrTaskManager.contract.FilterLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerStaleStakesForbiddenUpdateIterator{contract: _ContractZrTaskManager.contract, event: "StaleStakesForbiddenUpdate", logs: logs, sub: sub}, nil
}

// WatchStaleStakesForbiddenUpdate is a free log subscription operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) WatchStaleStakesForbiddenUpdate(opts *bind.WatchOpts, sink chan<- *ContractZrTaskManagerStaleStakesForbiddenUpdate) (event.Subscription, error) {

	logs, sub, err := _ContractZrTaskManager.contract.WatchLogs(opts, "StaleStakesForbiddenUpdate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZrTaskManagerStaleStakesForbiddenUpdate)
				if err := _ContractZrTaskManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseStaleStakesForbiddenUpdate is a log parse operation binding the contract event 0x40e4ed880a29e0f6ddce307457fb75cddf4feef7d3ecb0301bfdf4976a0e2dfc.
//
// Solidity: event StaleStakesForbiddenUpdate(bool value)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) ParseStaleStakesForbiddenUpdate(log types.Log) (*ContractZrTaskManagerStaleStakesForbiddenUpdate, error) {
	event := new(ContractZrTaskManagerStaleStakesForbiddenUpdate)
	if err := _ContractZrTaskManager.contract.UnpackLog(event, "StaleStakesForbiddenUpdate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZrTaskManagerTaskChallengedSuccessfullyIterator is returned from FilterTaskChallengedSuccessfully and is used to iterate over the raw logs and unpacked data for TaskChallengedSuccessfully events raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerTaskChallengedSuccessfullyIterator struct {
	Event *ContractZrTaskManagerTaskChallengedSuccessfully // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZrTaskManagerTaskChallengedSuccessfullyIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZrTaskManagerTaskChallengedSuccessfully)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZrTaskManagerTaskChallengedSuccessfully)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZrTaskManagerTaskChallengedSuccessfullyIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZrTaskManagerTaskChallengedSuccessfullyIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZrTaskManagerTaskChallengedSuccessfully represents a TaskChallengedSuccessfully event raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerTaskChallengedSuccessfully struct {
	TaskId     uint32
	Challenger common.Address
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterTaskChallengedSuccessfully is a free log retrieval operation binding the contract event 0xc20d1bb0f1623680306b83d4ff4bb99a2beb9d86d97832f3ca40fd13a29df1ec.
//
// Solidity: event TaskChallengedSuccessfully(uint32 indexed taskId, address challenger)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) FilterTaskChallengedSuccessfully(opts *bind.FilterOpts, taskId []uint32) (*ContractZrTaskManagerTaskChallengedSuccessfullyIterator, error) {

	var taskIdRule []interface{}
	for _, taskIdItem := range taskId {
		taskIdRule = append(taskIdRule, taskIdItem)
	}

	logs, sub, err := _ContractZrTaskManager.contract.FilterLogs(opts, "TaskChallengedSuccessfully", taskIdRule)
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerTaskChallengedSuccessfullyIterator{contract: _ContractZrTaskManager.contract, event: "TaskChallengedSuccessfully", logs: logs, sub: sub}, nil
}

// WatchTaskChallengedSuccessfully is a free log subscription operation binding the contract event 0xc20d1bb0f1623680306b83d4ff4bb99a2beb9d86d97832f3ca40fd13a29df1ec.
//
// Solidity: event TaskChallengedSuccessfully(uint32 indexed taskId, address challenger)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) WatchTaskChallengedSuccessfully(opts *bind.WatchOpts, sink chan<- *ContractZrTaskManagerTaskChallengedSuccessfully, taskId []uint32) (event.Subscription, error) {

	var taskIdRule []interface{}
	for _, taskIdItem := range taskId {
		taskIdRule = append(taskIdRule, taskIdItem)
	}

	logs, sub, err := _ContractZrTaskManager.contract.WatchLogs(opts, "TaskChallengedSuccessfully", taskIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZrTaskManagerTaskChallengedSuccessfully)
				if err := _ContractZrTaskManager.contract.UnpackLog(event, "TaskChallengedSuccessfully", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskChallengedSuccessfully is a log parse operation binding the contract event 0xc20d1bb0f1623680306b83d4ff4bb99a2beb9d86d97832f3ca40fd13a29df1ec.
//
// Solidity: event TaskChallengedSuccessfully(uint32 indexed taskId, address challenger)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) ParseTaskChallengedSuccessfully(log types.Log) (*ContractZrTaskManagerTaskChallengedSuccessfully, error) {
	event := new(ContractZrTaskManagerTaskChallengedSuccessfully)
	if err := _ContractZrTaskManager.contract.UnpackLog(event, "TaskChallengedSuccessfully", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractZrTaskManagerTaskRespondedIterator is returned from FilterTaskResponded and is used to iterate over the raw logs and unpacked data for TaskResponded events raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerTaskRespondedIterator struct {
	Event *ContractZrTaskManagerTaskResponded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractZrTaskManagerTaskRespondedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractZrTaskManagerTaskResponded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractZrTaskManagerTaskResponded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractZrTaskManagerTaskRespondedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractZrTaskManagerTaskRespondedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractZrTaskManagerTaskResponded represents a TaskResponded event raised by the ContractZrTaskManager contract.
type ContractZrTaskManagerTaskResponded struct {
	Response ZrServiceManagerLibTaskResponse
	Metadata ZrServiceManagerLibTaskResponseMetadata
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterTaskResponded is a free log retrieval operation binding the contract event 0xb3d0a4ff7bf22dfcf9cb480d1e535911448d11b47a0fa850ff82f39bf3ce3567.
//
// Solidity: event TaskResponded((uint32,string[]) response, (uint32,bytes32) metadata)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) FilterTaskResponded(opts *bind.FilterOpts) (*ContractZrTaskManagerTaskRespondedIterator, error) {

	logs, sub, err := _ContractZrTaskManager.contract.FilterLogs(opts, "TaskResponded")
	if err != nil {
		return nil, err
	}
	return &ContractZrTaskManagerTaskRespondedIterator{contract: _ContractZrTaskManager.contract, event: "TaskResponded", logs: logs, sub: sub}, nil
}

// WatchTaskResponded is a free log subscription operation binding the contract event 0xb3d0a4ff7bf22dfcf9cb480d1e535911448d11b47a0fa850ff82f39bf3ce3567.
//
// Solidity: event TaskResponded((uint32,string[]) response, (uint32,bytes32) metadata)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) WatchTaskResponded(opts *bind.WatchOpts, sink chan<- *ContractZrTaskManagerTaskResponded) (event.Subscription, error) {

	logs, sub, err := _ContractZrTaskManager.contract.WatchLogs(opts, "TaskResponded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractZrTaskManagerTaskResponded)
				if err := _ContractZrTaskManager.contract.UnpackLog(event, "TaskResponded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskResponded is a log parse operation binding the contract event 0xb3d0a4ff7bf22dfcf9cb480d1e535911448d11b47a0fa850ff82f39bf3ce3567.
//
// Solidity: event TaskResponded((uint32,string[]) response, (uint32,bytes32) metadata)
func (_ContractZrTaskManager *ContractZrTaskManagerFilterer) ParseTaskResponded(log types.Log) (*ContractZrTaskManagerTaskResponded, error) {
	event := new(ContractZrTaskManagerTaskResponded)
	if err := _ContractZrTaskManager.contract.UnpackLog(event, "TaskResponded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
